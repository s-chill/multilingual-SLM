In computing, tee is a command in command-line interpreters ( shells ) using standard streams which reads standard input and writes it to both standard output and one or more files, effectively duplicating its input. It is primarily used in conjunction with pipes and filters . The command is named after the T-splitter used in plumbing .

The tee command is normally used to split the output of a program so that it can be both displayed and saved in a file. The command can be used to capture intermediate output before the data is altered by another command or program.
The tee command reads standard input , then writes its content to standard output . It simultaneously copies the data into the specified file(s) or variables.
The syntax differs depending on the command's implementation.

The command is available for Unix and Unix-like operating systems , Microware OS-9 , DOS (e.g. 4DOS , FreeDOS ), Microsoft Windows (e.g. 4NT , Windows PowerShell ), and ReactOS . The Linux tee command was written by Mike Parker, Richard Stallman , and David MacKenzie. The command is available as a separate package for Microsoft Windows as part of the UnxUtils collection of native Win32 ports of common GNU Unix-like utilities. The FreeDOS version was developed by Jim Hall and is licensed under the GPL . The tee command has also been ported to the IBM i operating system.

Additionally the sponge command offers similar capabilities.

Arguments:

Flags:

The command returns the following exit values ( exit status ):

Using process substitution lets more than one process read the standard output of the originating process.
Read this example from GNU Coreutils, tee invocation .

Note: If a write to any successfully opened File operand is not successful, writes to other successfully opened File operands and standard output will continue, but the exit value will be >0.

Arguments:

Flags:

Note: When tee is used with a pipe, the output of the previous command is written to a temporary file . When that command finishes, tee reads the temporary file, displays the output, and writes it to the file(s) given as command-line argument .

Arguments:

Note: tee is implemented as a ReadOnly command alias . The internal cmdlet name is Microsoft.PowerShell.Utility\Tee-Object .

This displays the standard output of the command lint program.c at the computer, and at the same time saves a copy of it in the file program.lint . If a file named program.lint already exists, it is deleted and replaced.

Similarly, both the stdout and stderr output streams can be redirected to standard output and the program.lint using stream redirection:

This displays the standard output of the lint program.c command at the computer and at the same time appends a copy of it to the end of the program.lint file. If the program.lint file does not exist, it is created.

This example shows tee being used to bypass an inherent limitation in the sudo command. sudo is unable to pipe the standard output to a file.  By dumping its stdout stream into /dev/null , we also suppress the mirrored output in the console. The command above gives the current user root access to a server over ssh, by installing the user's public key to the server's key authorization list.

In Bash , the output can be filtered before being written to the file—without affecting the output displayed—by using process substitution . For example,

removes common ANSI escape codes before writing to ls.txt , but retains them for display.

This example searches the file wikipedia.txt for any lines containing the string " 4DOS ", makes a copy of the matching lines in 4DOS.txt , sorts the lines, and writes them to the output file 4DOSsorted.txt :

This displays the standard output of the command ipconfig at the console window , and simultaneously saves a copy of it in the file OutputFile.txt .

This example shows that the piped input for tee can be filtered and that tee is used to display that output, which is filtered again so that only processes owning more than 1000 handles are displayed, and writes the unfiltered output to the file ABC.txt .