A man page (short for manual page ) is a form of software documentation usually found on a Unix or Unix-like operating system . Topics covered include computer programs (including library and system calls ), formal standards and conventions, and even abstract concepts. A user may invoke a man page by issuing the man command .

By default, man typically uses a terminal pager program such as more or less to display its output.

Man pages are often referred to as an on-line or online form of software documentation, even though the man command does not require internet access, dating back to the times when printed out-of-band manuals were the norm.

Before Unix (e.g., GCOS ), documentation was printed pages, available on the premises to users (staff, students...), organized into steel binders, locked together in one monolithic steel reading rack, bolted to a table or counter, with pages organized for modular information updates, replacement, errata, and addenda.

In the first two years of the history of Unix , no documentation existed. The Unix Programmer's Manual was first published on November 3, 1971. The first actual man pages were written by Dennis Ritchie and Ken Thompson at the insistence of their manager Doug McIlroy in 1971. Aside from the man pages, the Programmer's Manual also accumulated a set of short papers, some of them tutorials (e.g. for general Unix usage, the C programming language, and tools such as Yacc ), and others more detailed descriptions of operating system features. The printed version of the manual initially fit into a single binder, but as of PWB/UNIX and the 7th Edition of Research Unix , it was split into two volumes with the printed man pages forming Volume 1.

Later versions of the documentation imitated the first man pages' terseness. Ritchie added a "How to get started" section to the Third Edition introduction, and Lorinda Cherry provided the "Purple Card" pocket reference for the Sixth and Seventh Editions. Versions of the software were named after the revision of the manual; the seventh edition of the Unix Programmer's Manual , for example, came with the 7th Edition or Version 7 of Unix.

For the Fourth Edition the man pages were formatted using the troff typesetting package and its set of -man macros (which were completely revised between the Sixth and Seventh Editions of the Manual , but have since not drastically changed). At the time, the availability of online documentation through the manual page system was regarded as a great advance. To this day, virtually every Unix command line application comes with a man page, and many Unix users perceive a program's lack of man pages as a sign of low quality; indeed, some projects, such as Debian , go out of their way to write man pages for programs lacking one. The modern descendants of 4.4BSD also distribute man pages as one of the primary forms of system documentation (having replaced the old -man macros with the newer -mdoc ).

There was a hidden Easter egg in the man-db version of the man command that would cause the command to return "gimme gimme gimme" when run at 00:30 (a reference to the ABBA song Gimme! Gimme! Gimme! (A Man After Midnight) . It was introduced in 2011 but first restricted and then removed in 2017 after finally being found.

The default format of man pages is troff , with either the macro package man (appearance oriented) or mdoc (semantic oriented). This makes it possible to typeset a man page into PostScript , PDF , and various other formats for viewing or printing.

Some Unix systems have a package for the man2html command, which enables users to browse their man pages using an HTML browser. Systems with groff and man-db should use the higher-quality native HTML output ( man --html ) instead.
The GNU Emacs program WoMan (from "WithOut man") allows to browse man pages from the editor.

In 2010, OpenBSD deprecated troff for formatting man pages in favour of mandoc , a specialised compiler/formatter for man pages with native support for output in PostScript , HTML , XHTML , and the terminal. It is meant to only support a subset of troff used in manual pages, specifically those using mdoc macros.

Quite a few websites offer online access to manual pages from various Unix-like systems.

In February 2013, the BSD community saw a new open source mdoc.su service launched, which unified and shortened access to the man.cgi scripts of the major modern BSD projects through a unique nginx -based deterministic URL shortening service for the *BSD man pages.

For Linux, a man7.org service has been set up to serve manuals specific to the system. A ManKier service provides a wider selection, and integrates the TLDR pages too.

To read a manual page for a Unix command, a user can type:

Pages are traditionally referred to using the notation "name(section)": for example, ftp(1) . The section refers to different ways the topic might be referenced - for example, as a system call, or a shell (command line) command or package, or a package's configuration file, or as a coding construct / header.

The same page name may appear in more than one section of the manual, such as when the names of system calls , user commands , or macro packages coincide. Examples are man(1) and man(7) , or exit(2) and exit(3) . The syntax for accessing the non-default manual section varies between different man implementations.

On Solaris and illumos, for example, the syntax for reading printf(3C) is:

On Linux and BSD derivatives the same invocation would be:

which searches for printf in section 3 of the man pages.

The manual is generally split into eight numbered sections. Most systems today (e.g. BSD , macOS , Linux , and Solaris 11.4) inherit the numbering scheme used by Research Unix . While System V uses a different order:

POSIX APIs are present in both sections 2 and 3, where section 2 contains APIs that are implemented as system calls and section 3 contains APIs that are implemented as library routines.

On some systems some of the following sections are available:

Some sections are further subdivided by means of a suffix; for example, in some systems, section 3C is for C library calls, 3M is for the math library, and so on. A consequence of this is that section 8 (system administration commands) is sometimes relegated to the 1M subsection of the main commands section. Some subsection suffixes have a general meaning across sections:

(Section 3 tends to be the exception with the many suffixes for different languages.)

Some versions of man cache the formatted versions of the last several pages viewed. One form is the cat page , simply piped to the pager for display.

All man pages follow a common layout that is optimized for presentation on a simple ASCII text display, possibly without any form of highlighting or font control. Sections present may include:

Other sections may be present, but these are not well standardized across man pages. Common examples include: OPTIONS, EXIT STATUS, RETURN VALUE, ENVIRONMENT, BUGS, FILES, AUTHOR, REPORTING BUGS, HISTORY and COPYRIGHT.

Manual pages can be written either in the old man macros, the new doc macros, or a combination of both ( mandoc ). The man macro set provides minimal rich text functions, with directives for the title line, section headers, (bold, small or italic) fonts, paragraphs and adding/reducing indentation. The newer mdoc language is more semantic in nature, and contains specialized macros for most standard sections such as program name, synopsis, function names, and the name of the authors. This information can be used to implement a semantic search for manuals by programs such as mandoc . Although it also includes directives to directly control the styling, it is expected that the specialized macros will cover most of the use-cases. Both the mandoc and the groff projects consider mdoc the preferred format for new documents.

Although man pages are, to troff, text laid out using 10-point Roman type , this distinction is usually moot because man pages are viewed in the terminal (TTY) instead of laid out on paper. As a result, the "small font" macro is seldom used. On the other hand, bold and italic text is supported by the terminal via ECMA-48 , and groff's grotty does emit them as requested when it detects a supporting terminal. The BSD mandoc however only supports bold and underlined (as a replacement for italics) text via the typewriter backspace-then-overstrike sequence, which needs to be translated into ECMA-48 by less .

Some tools have been used to convert documents in a less contrived format to manual pages. Examples include GNU's help2man , which takes a --help output and some additional content to generate a manual page. The manual would be barely more useful than the said output, but for GNU programs this is not an issue as texinfo is the main documentation system. A number of tools, including pandoc , ronn, and md2man support conversion from Markdown to manual pages. All these tools emit the man format, as Markdown is not expressive enough to match the semantic content of mdoc . DocBook has an inbuilt man(7) converter â€“ of appalling quality, according to mandoc's author who wrote a separate mdoc(7) converter.

Man pages are usually written in English, but translations into other languages may be available on the system. The GNU man-db and the mandoc man is known to search for localized manual pages under subdirectories.

Few alternatives to man have enjoyed much popularity, with the possible exception of GNU Project's " info " system, an early and simple hypertext system.  There is also a third-party effort known as TLDR pages ( tldr ) that provides simple examples for common use cases, similar to a cheatsheet .

In addition, some Unix GUI applications (particularly those built using the GNOME and KDE development environments) now provide end-user documentation in HTML and include embedded HTML viewers such as yelp for reading the help within the application. An HTML system in Emacs is also slated to replace texinfo.