A game server (also sometimes referred to as a host ) is a server which is the authoritative source of events in a multiplayer video game . The server transmits enough data about its internal state to allow its connected clients to maintain their own accurate version of the game world for display to players. They also receive and process each player's input.

Dedicated servers simulate game worlds without supporting direct input or output, except that required for their administration. Players must connect to the server with separate client programs in order to see and interact with the game.

The foremost advantage of dedicated servers is their suitability for hosting in professional data centers , with all of the reliability and performance benefits that entails. Remote hosting also eliminates the low-latency advantage that would otherwise be held by any player who hosts and connects to a server from the same machine or local network.

The cost to operate dedicated servers is sometimes met by a game's developers (particularly on consoles ) and sometimes by clan groups, but in either case, the public is reliant on third parties providing servers to connect to. For this reason, most games which use dedicated servers also provide listen server support. Players of these games will oftentimes host servers for the public and their clans, either by hosting a server instance from their own hardware, or by renting from a game server hosting provider.

A dedicated game server contains many similar components as a computer, the big difference is the computing power needed for a game server is a lot higher than that of a normal PC.

Normally, dedicated game servers always use the latest hardware of enterprise quality, as hosting of a dedicated game server is often shared and many different instances are hosted within the same server. Each compartment size depends on how big the hosted server is and how much hardware has been assigned to it. For example, a hosting provider may rent out a server with 8 GB of RAM and 50 GB of storage, and pay extra for the different CPU priority levels.

Listen servers run in the same process as a game client. They otherwise function like dedicated servers, but typically have the disadvantage of having to communicate with remote players over the residential internet connection of the hosting player. Performance is also reduced by the simple fact that the machine running the server is also generating an output image. Furthermore, listen servers grant anyone playing on them directly a large latency advantage over other players and cease to exist when that player leaves the game.

However, listen servers have the advantage of being essentially free and not requiring any special infrastructure or forward planning to set up, which makes them common at LAN parties where latency and bandwidth issues are not a concern. They are also common in console games.

In a listen server arrangement, "host migration" is a useful feature. Without host migration, if the player that is currently hosting disconnects for any reason (quitting, crashing, lost network connection, etc.), the current server stops functioning and gameplay ends. A host migration feature allows one of the other players to become designated as the new host, so that the game can continue.

In the client/server model outlined elsewhere in this article, clients receive processed data from the server and display it without much thought. In the alternative "peer-to-peer" model there is no server: each "peer" instead receives the raw input streams of each other player and determines the results itself.

Peer-to-peer is generally considered obsolete for action games, but it is still common in the real-time strategy genre due to its suitability for games with large numbers of tokens and small numbers of players. Instead of constantly transmitting the positions of 1000 troops, the game can make a one-off transmission of the fact that 1000 troops are selected and that the player in command of them just issued a move order.

However, peer-to-peer has many disadvantages:

Multiple listen servers collectively peer amongst themselves for listen-peer setting. This type of setting avoids the disadvantages of peer-to-peer communications among all clients and is a better alternative to dedicated servers for increased number of clients.

The rate at which a game server runs simulation steps is commonly referred to as its "tickrate". A "tick" is a number associated with each simulation step which is broadcast to clients to help them synchronise with the server.{9}

There are three reasons to limit the frequency of server simulation steps to a predefined tickrate: to conserve server and client bandwidth, to conserve server CPU time, and to allow clients to be certain of how much time has elapsed between each tick. The last point is important for internet games, as network updates from the server can arrive at different intervals or even an incorrect order.

Servers, particularly those of PC games , can generally be customized in ways that still allow unaltered clients to connect to them. These customizations can include tweaks to built-in game settings, content that is downloaded by clients when they join the game, and new code which changes the way that the server behaves.

While server customization is popular with server administrators and players, it can be at odds with the desire of developers and other players for the game to be experienced as intended. It can also aggravate players by enabling abusive administrators to lie about what their server offers.