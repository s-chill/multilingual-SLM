In computing , time-sharing is the concurrent sharing of a computing resource among many tasks or users by giving each task or user a small slice of processing time . This quick switch between tasks or users gives the illusion of simultaneous execution. It enables multi-tasking by a single user or enables multiple-user sessions.

Developed during the 1960s, its emergence as the prominent model of computing in the 1970s represented a major technological shift in the history of computing. By allowing many users to interact concurrently with a single computer, time-sharing dramatically lowered the cost of providing computing capability, made it possible for individuals and organizations to use a computer without owning one, and promoted the interactive use of computers and the development of new interactive applications .

The earliest computers were extremely expensive devices, and very slow in comparison to later models. Machines were typically dedicated to a particular set of tasks and operated by control panels, the operator manually entering small programs via switches in order to load and run a series of programs. These programs might take hours to run. As computers grew in speed, run times dropped, and soon the time taken to start up the next program became a concern. Newer batch processing software and methodologies, including batch operating systems such as IBSYS (1960), decreased these "dead periods" by queuing up programs ready to run.

Comparatively inexpensive card punch or paper tape writers were used by programmers to write their programs "offline". Programs were submitted to the operations team, which scheduled them to be run. Output (generally printed) was returned to the programmer. The complete process might take days, during which time the programmer might never see the computer. Stanford students made a short film humorously critiquing this situation.

The alternative of allowing the user to operate the computer directly was generally far too expensive to consider. This was because users might have long periods of entering code while the computer remained idle. This situation limited interactive development to those organizations that could afford to waste computing cycles: large universities for the most part.

The concept is claimed to have been first described by Robert Dodds in a letter he wrote in 1949 although he did not use the term time-sharing . Later John Backus also described the concept, but did not use the term, in the 1954 summer session at MIT . Bob Bemer used the term time-sharing in his 1957 article "How to consider a computer" in Automatic Control Magazine and it was reported the same year he used the term time-sharing in a presentation. In a paper published in December 1958, W. F. Bauer wrote that "The computers would handle a number of problems concurrently. Organizations would have input-output equipment installed on their own premises and would buy time on the computer much the same way that the average household buys power and water from utility companies."

Christopher Strachey , who became Oxford University's first professor of computation, filed a patent application in the United Kingdom for "time-sharing" in February 1959. He gave a paper "Time Sharing in Large Fast Computers" at the first UNESCO Information Processing Conference in Paris in June that year, where he passed the concept on to J. C. R. Licklider . This paper was credited by the MIT Computation Center in 1963 as "the first paper on time-shared computers".

The meaning of the term time-sharing has shifted from its original usage. From 1949 to 1960, time-sharing was used to refer to multiprogramming without multiple user sessions. Later, it came to mean sharing a computer interactively among multiple users. In 1984 Christopher Strachey wrote he considered the change in the meaning of the term time-sharing a source of confusion and not what he meant when he wrote his paper in 1959.

There are also examples of systems which provide multiple user consoles but only for specific applications, they are not general-purpose systems. These include SAGE (1958), SABRE (1960) and PLATO II (1961), created by Donald Bitzer at a public demonstration at Robert Allerton Park near the University of Illinois in early 1961. Bitzer has long said that the PLATO project would have gotten the patent on time-sharing if only the University of Illinois had not lost the patent for two years.

The first interactive , general-purpose time-sharing system usable for software development, Compatible Time-Sharing System , was initiated by John McCarthy at MIT writing a memo in 1959. Fernando J. Corbató led the development of the system, a prototype of which had been produced and tested by November 1961. Philip M. Morse arranged for IBM to provide a series of their mainframe computers starting with the IBM 704 and then the IBM 709 product line IBM 7090 and IBM 7094 . IBM loaned those mainframes at no cost to MIT along with the staff to operate them and also provided hardware modifications mostly in the form of RPQs as prior customers had already commissioned the modifications. There were certain stipulations that governed MIT's use of the loaned IBM hardware. MIT could not charge for use of CTSS. MIT could only use the IBM computers for eight hours a day; another eight hours were available for other colleges and universities; IBM could use their computers for the remaining eight hours, although there were some exceptions. In 1963 a second deployment of CTSS was installed on an IBM 7094 that MIT has purchased using ARPA money. This was used to support Multics development at Project MAC .

JOSS began time-sharing service in January 1964. Dartmouth Time Sharing System (DTSS) began service in March 1964.

Throughout the late 1960s and the 1970s, computer terminals were multiplexed onto large institutional mainframe computers ( centralized computing systems), which in many implementations sequentially polled the terminals to see whether any additional data was available or action was requested by the computer user. Later technology in interconnections were interrupt driven, and some of these used parallel data transfer technologies such as the IEEE 488 standard. Generally, computer terminals were utilized on college properties in much the same places as desktop computers or personal computers are found today. In the earliest days of personal computers, many were in fact used as particularly smart terminals for time-sharing systems.

DTSS's creators wrote in 1968 that "any response time which averages more than 10 seconds destroys the illusion of having one's own computer". Conversely, timesharing users thought that their terminal was the computer. It was an efficient way to share a large computer. As of 1972 DTSS supported more than 100 simultaneous users. Although more than 1,000 of the 19,503 jobs the system completed on "a particularly busy day" required ten seconds or more of computer time, DTSS was able to handle the jobs because 78% of jobs needed one second or less of computer time. About 75% of 3,197 users used their terminal for 30 minutes or less, during which they used less than four seconds of computer time. A football simulation, among early mainframe games written for DTSS, used less than two seconds of computer time during the 15 minutes of real time for playing the game. With the rise of microcomputing in the early 1980s, time-sharing became less significant, because individual microprocessors were sufficiently inexpensive that a single person could have all the CPU time dedicated solely to their needs, even when idle.

However, the Internet brought the general concept of time-sharing back into popularity. Expensive corporate server farms costing millions can host thousands of customers all sharing the same common resources. As with the early serial terminals, web sites operate primarily in bursts of activity followed by periods of idle time. This bursting nature permits the service to be used by many customers at once, usually with no perceptible communication delays, unless the servers start to get very busy.

Genesis

In the 1960s, several companies started providing time-sharing services as service bureaus . Early systems used Teletype Model 33 KSR or ASR or Teletype Model 35 KSR or ASR machines in ASCII environments, and IBM Selectric typewriter -based terminals (especially the IBM 2741 ) with two different seven-bit codes. They would connect to the central computer by dial-up Bell 103A modem or acoustically coupled modems operating at 10–15 characters per second. Later terminals and modems supported 30–120 characters per second. The time-sharing system would provide a complete operating environment, including a variety of programming language processors, various software packages, file storage, bulk printing, and off-line storage. Users were charged rent for the terminal, a charge for hours of connect time, a charge for seconds of CPU time, and a charge for kilobyte-months of disk storage.

Common systems used for time-sharing included the SDS 940 , the PDP-10 , the IBM 360 , and the GE-600 series . Companies providing this service included GE 's GEISCO , the IBM subsidiary The Service Bureau Corporation , Tymshare (founded in 1966), National CSS (founded in 1967 and bought by Dun & Bradstreet in 1979), Dial Data (bought by Tymshare in 1968), AL/COM , Bolt, Beranek, and Newman (BBN) and Time Sharing Ltd. in the UK . By 1968, there were 32 such service bureaus serving the US National Institutes of Health (NIH) alone. The Auerbach Guide to Timesharing (1973) lists 125 different timesharing services using equipment from Burroughs , CDC , DEC , HP , Honeywell , IBM , RCA , Univac , and XDS .

In 1975, acting president of Prime Computer Ben F. Robelen told stockholders that "The biggest end-user market currently is time-sharing." For DEC, for a while the second largest computer company (after IBM), this was also true: Their PDP-10 and IBM's 360/67 were widely used by commercial timesharing services such as CompuServe, On-Line Systems, Inc. (OLS), Rapidata and Time Sharing Ltd.

The advent of the personal computer marked the beginning of the decline of time-sharing. The economics were such that computer time went from being an expensive resource that had to be shared to being so cheap that computers could be left to sit idle for long periods in order to be available as needed.

Although many time-sharing services simply closed, Rapidata held on, and became part of National Data Corporation . It was still of sufficient interest in 1982 to be the focus of "A User's Guide to Statistics Programs: The Rapidata Timesharing System". Even as revenue fell by 66% and National Data subsequently developed its own problems, attempts were made to keep this timesharing business going.

Beginning in 1964, the Multics operating system was designed as a computing utility , modeled on the electrical or telephone utilities. In the 1970s, Ted Nelson 's original " Xanadu " hypertext repository was envisioned as such a service.

Time-sharing was the first time that multiple processes , owned by different users, were running on a single machine, and these processes could interfere with one another. For example, one process might alter shared resources which another process relied on, such as a variable stored in memory. When only one user was using the system, this would result in possibly wrong output - but with multiple users, this might mean that other users got to see information they were not meant to see.

To prevent this from happening, an operating system needed to enforce a set of policies that determined which privileges each process had. For example, the operating system might deny access to a certain variable by a certain process.

The first international conference on computer security in London in 1971 was primarily driven by the time-sharing industry and its customers.

Time-sharing in the form of shell accounts has been considered a risk.

Significant early timesharing systems: