less is a terminal pager program on Unix , Windows , and Unix-like systems used to view (but not change) the contents of a text file one screen at a time. It is similar to more , but has the extended capability of allowing both forward and backward navigation through the file. Unlike most Unix text editors/viewers, less does not need to read the entire file before starting, allowing for immediate viewing regardless of file size.

Mark Nudelman initially wrote less during 1983â€“85, in the need of a version of more able to do backward scrolling of the displayed text. The name came from the joke of doing "backwards more." Originally, less was developed for Unix, but it has been ported to a number of other operating systems, including MS-DOS , Microsoft Windows , OS/2 , and OS-9 , as well as Unix-like systems such as Linux . It is still maintained today by Nudelman.

To help remember the difference between less and more , a common joke is to say, " less > more ," implying that less has greater functionality than more . A similar saying is that " less is more , more or less".

less can be invoked with options to change its behaviour, for example, the number of lines to display on the screen. A few options vary depending on the operating system. While less is displaying the file, various commands can be used to navigate through the file. These commands are based on those used by both more and vi . It is also possible to search for character patterns in the file.

By default, less displays the contents of the file to the standard output (one screen at a time). If the file name argument is omitted, it displays the contents from standard input (usually the output of another command through a pipe ). If the output is redirected to anything other than a terminal , for example a pipe to another command, less behaves like cat .

The "lesspipe" extension can automatically determine file types such as PDF , multimedia, and compressed archives , and automatically determines which program to launch display the file's information with, such as text from a PDF file, metadata of photos, lists of files in a compressed archive, and content of a single file in a compressed archive.

The command- syntax is:

The --buffers=n and --auto-buffers options control how much memory less may use to buffer inputs.  This is most relevant when less is directly accessing a named file that is modified or deleted while less is still running, and when less is receiving data from a pipe and the data can not be randomly accessed or regenerated.  On the other hand, unlimited buffering means that less will request as much memory as it is fed data, which could drive the system into using virtual memory and swapping a lot of data between RAM and disks (dramatically slowing system performance for most applications on the host), or even further into memory exhaustion where any application on the host requesting memory may have that request denied, or may crash when attempting to access memory that the OS promised but can't find when the application actually attempts to use it and a page-fault occurs.  For this reason, some companies/organisations insist that less be used only with fixed buffering - or not at all - on production machines.