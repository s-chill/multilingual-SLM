Copyleft is the legal technique of granting certain freedoms over copies of copyrighted works with the requirement that the same rights be preserved in derivative works . In this sense, freedoms refers to the use of the work for any purpose, and the ability to modify, copy, share, and redistribute the work, with or without a fee. Licenses which implement copyleft can be used to maintain copyright conditions for works ranging from computer software , to documents , art , and scientific discoveries, and similar approaches have even been applied to certain patents .

Copyleft software licenses are considered protective or reciprocal in contrast with permissive free software licenses , and require that information necessary for reproducing and modifying the work must be made available to recipients of the software program, which are often distributed as executables . This information is most commonly in the form of source code files, which usually contain a copy of the license terms and acknowledge the authors of the code. Copyleft helps ensure everyone's rights to freely use the product but it prohibits owning, registering copyright and earning royalties from copyright.

Notable copyleft licenses include the GNU General Public License (GPL), originally written by Richard Stallman , which was the first software copyleft license to see extensive use; the Mozilla Public License ; the Free Art License ; and the Creative Commons share-alike license condition —with the last two being intended for non-software works, such as documents and pictures, both academic or artistic in nature. Wikipedia is copyleft under the Creative Commons Attribution-ShareAlike license.

Li-Chen Wang 's Palo Alto Tiny BASIC for the Intel 8080 appeared in Dr. Dobb's Journal in May 1976. The listing begins with the title, author's name, and date, but also has "@COPYLEFT ALL WRONGS RESERVED".

The concept of copyleft was described in Richard Stallman 's GNU Manifesto in 1985, where he wrote:

GNU is not in the public domain. Everyone will be permitted to modify and redistribute GNU, but no distributor will be allowed to restrict its further redistribution. That is to say, proprietary modifications will not be allowed. I want to make sure that all versions of GNU remain free.

Stallman's motivation was that a few years earlier he had worked on a Lisp interpreter. Symbolics asked to use the Lisp interpreter, and Stallman agreed to supply them with a public domain version of his work. Symbolics extended and improved the Lisp interpreter, but when Stallman wanted access to the improvements that Symbolics had made to his interpreter, Symbolics refused. Stallman then, in 1984, proceeded to work towards eradicating this emerging behavior and culture of proprietary software , which he named software hoarding . This was not the first time Stallman had dealt with proprietary software, but he deemed this interaction a "turning point". He justified software sharing, protesting that when sharing, the software online can be copied without the loss of the original piece of work. The software can be used multiple times without ever being damaged or worn out.

As Stallman deemed it impractical in the short term to eliminate current copyright law and the wrongs he perceived it to perpetuate, he decided to work within the framework of existing law; in 1985, he created his own copyright license, the Emacs General Public License, the first copyleft license. This later evolved into the GNU General Public License , which is now one of the most popular free-software licenses. For the first time, a copyright holder had taken steps to ensure that the maximal number of rights be perpetually transferred to a program's users, no matter what subsequent revisions anyone made to the original program. This original GPL did not grant rights to the public at large, only those who had already received the program; but it was the best that could be done under existing law.

The new license was not at this time given the copyleft label. Richard Stallman stated that the use of "Copyleft" comes from Don Hopkins , who mailed him a letter in 1984 or 1985, on which was written: "Copyleft – all rights reversed ", which is a pun on the common copyright disclaimer " all rights reserved ".

In France , a series of meetings taking place in 2000 under the title "Copyleft Attitude" gave birth to the Free Art License (FAL), theoretically valid in any jurisdiction bound by the Berne Convention and recommended by Stallman's own Free Software Foundation . Shortly thereafter, a separate, unrelated initiative in the United States yielded the Creative Commons license , available since 2001 in several different versions (only some of which can be described as copyleft) and more specifically tailored to U.S. law.

While copyright law gives software authors control over copying, distribution and modification of their works, the goal of copyleft is to give all users of the work the freedom to carry out all of these activities. These freedoms (from the Free Software Definition ) include:

Similar terms are present in the Open Source Definition , a separate definition that contains similar freedoms. The vast majority of copyleft licenses satisfy both definitions, that of the Free Software Definition and Open Source Definition. By guaranteeing viewers and users of a work the freedom and permission to reproduce, adapt , or distribute it, copyleft licenses are distinct from other types of copyright licenses that limit such freedoms.

Instead of allowing a work to fall completely into the public domain , where no ownership of copyright is claimed, copyleft allows authors to impose restrictions on the use of their work. One of the main restrictions imposed by copyleft is that derived works must also be released under a compatible copyleft license.

This is due to the underlying principle of copyleft: that anyone can benefit freely from the previous work of others, but that any modifications to that work should benefit everyone else as well, and thus must be released under similar terms. For this reason, copyleft licenses are also known as reciprocal licenses: any modifiers of a copyleft-licensed work are expected to reciprocate the author's action of copyleft-licensing the software by also copyleft-licensing any derivatives they might have made. Because of this requirement, copyleft licenses have also been described as "viral" due to their self-perpetuating terms.

In addition to restrictions on copying, copyleft licenses address other possible impediments. They ensure that rights cannot be later revoked , and require the work and its derivatives to be provided in a form that allows further modifications to be made. In software , this means requiring that the source code of the derived work be made available together with the software itself.

The economic incentives to work on copyleft content can vary. Traditional copyright law is designed to promote progress by providing economic benefits to creators. When choosing to copyleft their work, content creators may seek complementary benefits like recognition from their peers.

In the world of computer programming, copyleft-licensed computer programs are often created by programmers to fill a need they have noticed. Such programs are often published with a copyleft license simply to ensure that subsequent users can also freely use modified versions of that program. This is especially true for creators who wish to prevent "open source hijacking", or the act of reusing open-source code and then adding extra restrictions to it, an action prevented by copyleft-licensing the software. Some creators, such as Elastic , feel that preventing commercial enterprises from using and then selling their product under a proprietary license is also an incentive.

Furthermore, the open-source culture of programming has been described as a gift economy , where social power is determined by an individual's contributions. Contributing to or creating open-source, copyleft-licensed software of high quality can lead to contributors gaining valuable experience and can lead to future career opportunities.

Copyleft software has economic effects beyond individual creators. The presence of quality copyleft software can force proprietary software developers to increase the quality of their software to compete with free software. This may also have the effect of preventing monopolies in areas dominated by proprietary software. However, competition with proprietary software can also be a reason to forgo copyleft. The Free Software Foundation recommends that when "widespread use of the code is vital for advancing the cause of free software", allowing the code to be copied and used freely is more important than a copyleft.

Common practice for using copyleft is to codify the copying terms for a work with a license . Any such license typically includes all the provisions and principles of copyleft inside the license's terms. This includes the freedom to use the work, study the work, copy, and share the work with others, modify the work, and distribute exact or modified versions of that work, with or without a fee.

Unlike similar permissive licenses that also grant these freedoms, copyleft licenses also ensure that any modified versions of a work covered by a copyleft license must also grant these freedoms. Thus, copyleft licenses have conditions: that modifications of any work licensed under a copyleft license must be distributed under a compatible copyleft scheme and that the distributed modified work must include a means of modifying the work. Under fair use , however, copyleft licenses may be superseded, just like regular copyrights. Therefore, any person utilizing a source licensed under a copyleft license for works they invent is free to choose any other license (or none at all) provided they meet the fair use standard.

Copyleft licenses necessarily make creative use of relevant rules and laws to enforce their provisions. For example, when using copyright law, those who contribute to a work under copyleft usually must gain, defer, or assign copyright holder status. By submitting the copyright of their contributions under a copyleft license, they deliberately give up some of the rights that normally follow from copyright, including the right to be the unique distributor of copies of the work.

Some laws used for copyleft licenses vary from one country to another, and may also be granted in terms that vary from country to country. For example, in some countries, it is acceptable to sell a software product without warranty, in standard GNU General Public License style, while in most European countries it is not permitted for a software distributor to waive all warranties regarding a sold product. For this reason, the extent of such warranties is specified in most European copyleft licenses, for example, the European Union Public Licence (EUPL), or the CeCILL license , a license that allows one to use GNU GPL in combination with a limited warranty.

For projects which will be run over a network, a variation of the GNU GPL, called the Affero General Public License (GNU AGPL), ensures that the source code is available to users of software over a network.

Copyleft is a distinguishing feature of some free software licenses, while other free-software licenses are not copyleft licenses because they do not require the licensee to distribute derivative works under the same license. There is an ongoing debate as to which class of license provides the greater degree of freedom. This debate hinges on complex issues, such as the definition of freedom and whose freedoms are more important: the potential future recipients of a work (freedom from proprietization) or just the initial recipient (freedom to proprietize). However, current copyright law and the availability of both types of licenses, copyleft and permissive, allow authors to choose the type under which to license the works they invent.

For documents, art, and other works other than software and code, the Creative Commons share-alike licensing system and the GNU Free Documentation License (GFDL) allow authors to apply limitations to certain sections of their work, exempting some parts of the work from the full copyleft mechanism. In the case of the GFDL, these limitations include the use of invariant sections, which may not be altered by future editors. The initial intention of the GFDL was as a device for supporting the documentation of copylefted software. However, the result is that it can be used for any kind of document.

The strength of the copyleft license governing a work is determined by the extent to which its provisions can be imposed on all kinds of derivative works. Thus, the term "weak copyleft" refers to licenses where not all derivative works inherit the copyleft license; whether a derivative work inherits or not often depends on how it was derived.

"Weak copyleft" licenses are often used to cover software libraries . This allows other software to link to the library and be redistributed without the requirement for the linking software to also be licensed under the same terms. Only changes to the software licensed under a "weak copyleft" license become subject itself to copyleft provisions of such a license. This allows programs of any license to be compiled and linked against copylefted libraries such as glibc and then redistributed without any re-licensing required. The concrete effect of strong vs. weak copyleft has yet to be tested in court. Free-software licenses that use "weak" copyleft include the GNU Lesser General Public License and the Mozilla Public License .

The GNU General Public License is an example of a license implementing strong copyleft. An even stronger copyleft license is the AGPL , which requires the publishing of the source code for software as a service use cases.

The Sybase Open Watcom Public License is one of the strongest copyleft licenses, as this license closes the so-called "private usage" loophole of the GPL, and requires the publishing of source code in any use case. For this reason, the license is considered non-free by the Free Software Foundation ,  the GNU Project , and the Debian project. However, the license is accepted as open source by the OSI .

The Design Science License (DSL) is a strong copyleft license that applies to any work, not only software or documentation, but also literature, artworks, music, photography, and video. DSL was written by Michael Stutz after he took an interest in applying GNU-style copyleft to non-software works, which later came to be called libre works . In the 1990s, it was used on music recordings, visual art, and even novels. It is not considered compatible with the GNU GPL by the Free Software Foundation.

"Full" and "partial" copyleft relate to another issue. Full copyleft exists when all parts of a work (except the license itself) may only be modified and distributed under the terms of the work's copyleft license. Partial copyleft, by contrast, exempts some parts of the work from the copyleft provisions, permitting distribution of some modifications under terms other than the copyleft license, or in some other way does not impose all the principles of copylefting on the work. An example of partial copyleft is the GPL linking exception made for some software packages.

The " share-alike " condition in some licenses imposes the requirement that any freedom that is granted regarding the original work must be granted on exactly the same or compatible terms in any derived work.

This implies that any copyleft license is automatically a share-alike license but not the other way around, as some share-alike licenses include further restrictions such as prohibiting commercial use. Another restriction is that not everyone wants to share their work, and some share-alike agreements require that the whole body of work be shared, even if the author only wants to share a certain part. The plus side for an author of source code is that any modification to the code will not only benefit the original author but that the author will be recognized and ensure the same or compatible license terms cover the changed code. Some Creative Commons licenses are examples of share-alike copyleft licenses.

Those licenses grant users of the software the same freedoms as copyleft licenses but do not require modified versions of that software to also include those freedoms. They have minimal restrictions on how the software can be used, modified, and redistributed, and are thus not copyleft licenses. Examples of this type of license include the X11 license , Apache license , Expat license , and the various BSD licenses .

It has been suggested that copyleft has become a divisive issue in the ideological strife between the Open Source Initiative and the free software movement . However, there is evidence that copyleft is both accepted and proposed by both parties:

" Viral license " is a pejorative name for copyleft licenses. It originates from the terms 'General Public Virus' or 'GNU Public Virus' (GPV), which dates back to 1990, a year after the GPLv1 was released. The name 'viral license' refers to the fact that any works derived from a copyleft work must preserve the copyleft permissions when distributed.

Some advocates of the various BSD Licenses used the term derisively in regards to the GPL's tendency to absorb BSD-licensed code without allowing the original BSD work to benefit from it, while at the same time promoting itself as "freer" than other licenses. Microsoft vice-president Craig Mundie remarked, "This viral aspect of the GPL poses a threat to the intellectual property of any organization making use of it." In another context, Steve Ballmer declared that code released under GPL is useless to the commercial sector, since it can only be used if the resulting surrounding code is licensed under a GPL-compatible license, and described it thus as "a cancer that attaches itself in an intellectual property sense to everything it touches".

In response to Microsoft's attacks on the GPL, several prominent free-software developers and advocates released a joint statement supporting the license. According to FSF compliance engineer David Turner, the term "viral license" creates a misunderstanding and a fear of using copylefted free software. While a person can catch a virus without active action, license conditions take effect upon effective usage or adoption. David McGowan has also written that there is no reason to believe the GPL could force proprietary software to become free software, but could "try to enjoin the firm from distributing commercially a program that combined with the GPL'd code to form a derivative work, and to recover damages for infringement." If the firm "actually copied code from a GPL'd program, such a suit would be a perfectly ordinary assertion of copyright, which most private firms would defend if the shoe were on the other foot." Richard Stallman has described this view with an analogy, saying, "The GPL's domain does not spread by proximity or contact, only by deliberate inclusion of GPL-covered code in your program. It spreads like a spider plant , not like a virus."

Popular copyleft licenses, such as the GPL, have a clause allowing components to interact with non-copyleft components as long as the communication is abstract, such as executing a command-line tool with a set of switches or interacting with a web server. As a consequence, even if one module of an otherwise non-copyleft product is placed under the GPL, it may still be legal for other components to communicate with it in ways such as these. This allowed communication may or may not include reusing libraries or routines via dynamic linking – some commentators say it does, the FSF asserts it does not and explicitly adds an exception allowing it in the license for the GNU Classpath re-implementation of the Java library. This ambiguity is an important difference between the GPL and the LGPL , in that the LGPL specifically allows linking or compiling works licensed under terms that are not compatible with the LGPL, with works covered by the LGPL.

The copyleft symbol is a mirrored version of the copyright symbol , © : a reversed C in a circle. A 2016 proposal to add the symbol to a future version of Unicode was accepted by the Unicode Technical Committee . The code point U+1F12F 🄯 COPYLEFT SYMBOL was added in Unicode 11 . The copyleft symbol has no legal status.

As of 2024, the symbol is generally provided as standard in the system fonts of most current operating systems , but if need be it may be approximated with character U+2184 ↄ LATIN SMALL LETTER REVERSED C between parenthesis (ɔ) .

On modern computer systems, the formal Unichar|1F12F 🄯 symbol can be generated using one of these methods ( keyboard shortcuts ):