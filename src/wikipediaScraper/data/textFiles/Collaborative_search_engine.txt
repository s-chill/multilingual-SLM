Collaborative search engines (CSE) are Web search engines and enterprise searches within company intranets that let users combine their efforts in information retrieval (IR) activities, share information resources collaboratively using knowledge tags , and allow experts to guide less experienced people through their searches. Collaboration partners do so by providing query terms, collective tagging, adding comments or opinions, rating search results, and links clicked of former (successful) IR activities to users having the same or a related information need .

Collaborative search engines can be classified along several dimensions: intent (explicit and implicit) and synchronization, depth of mediation, task vs. trait, division of labor, and sharing of knowledge.

Implicit collaboration characterizes Collaborative filtering and recommendation systems in which the system infers similar information needs. I-Spy, Jumper 2.0 , Seeks , the Community Search Assistant, the CSE of Burghardt et al., and the works of Longo et al. all represent examples of implicit collaboration. Systems that fall under this category identify similar users, queries and links clicked automatically, and recommend related queries and links to the searchers.

Explicit collaboration means that users share an agreed-upon information need and work together toward that goal. For example, in a chat-like application, query terms and links clicked are automatically exchanged. The most prominent example of this class is SearchTogether published in 2007. SearchTogether offers an interface that combines search results from standard search engines and a chat to exchange queries and links. PlayByPlay takes a step further to support general purpose collaborative browsing tasks with an instant messaging functionality. Reddy et al. follow a similar approach and compares two implementations of their CSE called MUSE and MUST. Reddy et al. focus on the role of communication required for efficient CSEs. Cerciamo supports explicit collaboration by allowing one person to concentrate on finding promising groups of documents while having the other person make in-depth judgments of relevance on documents found by the first person.

However, in Papagelis et al. terms are used differently: they combine explicitly shared links and implicitly collected browsing histories of users to a hybrid CSE.

Recent work in collaborative filtering and information retrieval has shown that sharing of search experiences among users having similar interests, typically called a community of practice or community of interest , reduces the effort put in by a given user in retrieving the exact information of interest.

Collaborative search deployed within a community of practice deploys novel techniques for exploiting context during search by indexing and ranking search results based on the learned preferences of a community of users. The users benefit by sharing information, experiences and awareness to personalize result-lists to reflect the preferences of the community as a whole. The community representing a group of users who share common interests, similar professions.  The best known example is the open-source project ApexKB (previously known as Jumper 2.0).

The depth of mediation refers to the degree that the CSE mediates search. SearchTogether is an example of UI-level mediation: users exchange query results and judgments of relevance, but the system does not distinguish among users when they run queries. PlayByPlay is another example of UI-level mediation where all users have full and equal access to the instant messaging functionality without the system's coordination. Cerchiamo and recommendation systems such as I-Spy keep track of each person's search activity independently and use that information to affect their search results. These are examples of deeper algorithmic mediation.

This model classifies people's membership in groups based on the task at hand vs. long-term interests; these may be correlated with explicit and implicit collaboration.

CSE systems started off on the desktop end, with the earliest ones being extensions or modifications to existing web browsers. GroupWeb is a desktop web browser that offers a shared visual workspace for a group of users. SearchTogether is a desktop application that combines search results from standard search engines and a chat interface for users to exchange queries and links. CoSense supports sensemaking tasks in collaborative Web search by offering rich and interactive presentations of a group's search activities.

With the prevalence of mobile phones and tablets, CSEs are also taking advantage of these additional device modalities. CoSearch is a system that supports co-located collaborative web search by leveraging extra mobile phones and mice. PlayByPlay also supports collaborative browsing between mobile and desktop users.

Synchronous collaboration model enables different users to work toward the same goal together simultaneously, with each individual user having access to one another's progress in real-time. A typical example of the synchronous collaboration model is GroupWeb, where users are made aware of what others are doing through features such as synchronous scrolling with pages, telepointers for enacting gestures, and group annotations that are attached to web pages.

Asynchronous collaboration models offer more flexibility toward when different users' different search processes are carried out while reducing the cognitive effort for later users to consume and build upon previous users' search results. SearchTogether, for example, supports asynchronous collaboration functionalities by persisting previous users' chat logs, search queries, and web browsing histories so that the later users could quickly bring themselves up to speed.

The applications of CSEs are well-explored in both the academic community and industry. For example, GroupWeb was used as a presentation tool for real-time distance education and conferences. ClassSearch is deployed in middle-school classroom sessions to facilitate collaborative search activities in classrooms and study the space of co-located search pedagogies.

Search terms and links clicked that are shared among users reveal their interests, habits, social
relations and intentions. In other words, CSEs put the privacy of the users at risk. Studies have shown that CSEs increase efficiency. Unfortunately, by the lack of privacy enhancing technologies, a privacy aware user who wants to benefit from a CSE has to disclose their entire search log. (Note, even when explicitly sharing queries and links clicked, the whole (former) log is disclosed to any user that joins a search session).  Thus, sophisticated mechanisms that allow on a more fine grained level which information is disclosed to whom are desirable.

As CSEs are a new technology just entering the market, identifying user privacy preferences and integrating Privacy enhancing technologies (PETs) into collaborative search are in conflict. On the one hand, PETs have to meet user preferences, on the other hand, one cannot identify these preferences without using a CSE, i.e., implementing PETs into CSEs. Today, the only work addressing this problem comes from Burghardt et al. They implemented a CSE with experts from the information system domain and derived the scope of possible privacy preferences in a user study with these experts. Results show that users define preferences referring to (i) their current context (e.g., being at work), (ii) the query content (e.g., users exclude topics from sharing), (iii) time constraints (e.g., do not publish the query X hours after the query has been issued, do not store longer than X days, do not share between working time), and that users intensively use the option to (iv) distinguish between different social groups when sharing information. Further, users require (v) anonymization and (vi) define reciprocal constraints, i.e., they refer to the behavior of other users, e.g., if a user would have shared the same query in turn.