The open-source-software movement is a social movement that supports the use of open-source licenses for some or all software, as part of the broader notion of open collaboration . The open-source movement was started to spread the concept/idea of open-source software .

Programmers who support the open-source-movement philosophy contribute to the open-source community by voluntarily writing and exchanging programming code for software development . The term open source requires that no one can discriminate against a group in not sharing the edited code or hinder others from editing their already-edited work. This approach to software development allows anyone to obtain and modify open-source code. These modifications are distributed back to the developers within the open-source community of people who are working with the software. In this way, the identities of all individuals participating in code modification are disclosed and the transformation of the code is documented over time. This method makes it difficult to establish ownership of a particular bit of code but is in keeping with the open-source-movement philosophy. These goals promote the production of high-quality programs as well as working cooperatively with other similarly-minded people to improve open-source technology.

The label open source was created and adopted by a group of people in the free software movement at a strategy session held at Palo Alto, California , in reaction to Netscape 's January 1998 announcement of a source-code release for Navigator . One of the reasons behind using the term was that "the advantage of using the term open source is that the business world usually tries to keep free technologies from being installed." Those people who adopted the term used the opportunity before the release of Navigator's source code to free themselves of the ideological and confrontational connotations of the term "free software". Later in February 1998, Bruce Perens and Eric S. Raymond founded an organization called Open Source Initiative (OSI) "as an educational, advocacy, and stewardship organization at a cusp moment in the history of that culture."

In the beginning, a difference between hardware and software did not exist. The user and programmer of a computer were one and the same. When the first commercial electronic computer was introduced by IBM in 1952, the machine was hard to maintain and expensive. Putting the price of the machine aside, it was the software that caused the problem when owning one of these computers. Then in 1952, a collaboration of all the owners of the computer got together and created a set of tools. The collaboration of people were in a group called PACT (The Project for the Advancement of Coding techniques). After passing this hurdle, in 1956, the Eisenhower administration decided to put restrictions on the types of sales AT&T could make. This did not stop the inventors from developing new ideas of how to bring the computer to the mass population. The next step was making the computer more affordable which slowly developed through different companies. Then they had to develop software that would host multiple users. MIT computation center developed one of the first systems, CTSS (Compatible Time-Sharing System). This laid the foundation for many more systems, and what we now call the open-source software movement.

The open-source movement is branched from the free software movement which began in the late 80s with the launching of the GNU project by Richard Stallman . Stallman is regarded within the open-source community as sharing a key role in the conceptualization of freely-shared source code for software development. The term " free software " in the free software movement is meant to imply freedom of software exchange and modification. The term does not refer to any monetary freedom. Both the free-software movement and the open-source movement share this view of free exchange of programming code , and this is often why both of the movements are sometimes referenced in literature as part of the FOSS or "Free and Open Software" or FLOSS "Free/Libre Open-Source" communities.

These movements share fundamental differences in the view on open software. The main, factionalizing difference between the groups is the relationship between open-source and proprietary software. Often, makers of proprietary software , such as Microsoft , may make efforts to support open-source software to remain competitive. Members of the open-source community are willing to coexist with the makers of proprietary software and feel that the issue of whether software is open source is a matter of practicality.

In contrast, members of the free-software community maintain the vision that all software is a part of freedom of speech and that proprietary software is unethical and unjust. The free-software movement openly champions this belief through talks that denounce proprietary software. As a whole, the community refuses to support proprietary software. Further there are external motivations for these developers. One motivation is that, when a programmer fixes a bug or makes a program it benefits others in an open-source environment. Another motivation is that a programmer can work on multiple projects that they find interesting and enjoyable. Programming in the open-source world can also lead to commercial job offers or entrance into the venture capital community. These are just a few reasons why open-source programmers continue to create and advance software.

While cognizant of the fact that both the free-software movement and the open-source movement share similarities in practical recommendations regarding open source, the free-software movement fervently continues to distinguish themselves from the open-source movement entirely. The free-software movement maintains that it has fundamentally different attitudes towards the relationship between open-source and proprietary software. The free-software community does not view the open-source community as their target grievance, however. Their target grievance is proprietary software itself.

The open-source movement has faced a number of legal challenges. Companies that manage open-source products have some difficulty securing their trademarks.
For example, the scope of " implied license " conjecture remains unclear and can compromise an enterprise's ability to patent productions made with open-source software. Another example is the case of companies offering add-ons for purchase; licensees who make additions to the open-source code that are similar to those for purchase may have immunity from patent suits.

In the court case " Jacobsen v. Katzer ", the plaintiff sued the defendant for failing to put the required attribution notices in his modified version of the software, thereby violating license. The defendant claimed Artistic License in not adhering to the conditions of the software's use, but the wording of the attribution notice decided that this was not the case. "Jacobsen v Katzer" established open-source software's equality to proprietary software in the eyes of the law.

In a court case accusing Microsoft of being a monopoly, Linux and open-source software was introduced in court to prove that Microsoft had valid competitors and was grouped in with Apple .

There are resources available for those involved open-source projects in need of legal advice. The Software Freedom Law Center features a primer on open-source legal issues. International Free and Open Source Software Law Review offers peer-reviewed information for lawyers on free-software issues.

The Open Source Initiative (OSI) was instrumental in the formalization of the open-source movement. The OSI was founded by Eric Raymond and Bruce Perens in February 1998 with the purpose of providing general education and advocacy of the open-source label through the creation of the Open Source Definition that was based on the Debian Free Software Guidelines. The OSI has become one of the main supporters and advocators of the open-source movement.

In February 1998, the open-source movement was adopted, formalized, and spearheaded by the Open Source Initiative (OSI), an organization formed to market software "as something more amenable to commercial business use" The OSI applied to register "Open Source" with the US Patent and Trademark Office, but was denied due to the term being generic and/or descriptive.  Consequently, the OSI does not own the trademark "Open Source" in a national or international sense, although it does assert common-law trademark rights in the term. The main tool they adopted for this was The Open Source Definition .

The open-source label was conceived at a strategy session that was held on February 3, 1998 in Palo Alto, California and on April 8 of the same year, the attendees of Tim Oâ€™Reilly's Free Software Summit voted to promote the use of the term open source .

Overall, the software developments that have come out of the open-source movement have not been unique to the computer-science field, but they have been successful in developing alternatives to propriety software. Members of the open-source community improve upon code and write programs that can rival much of the propriety software that is already available.

The rhetorical discourse used in open-source movements is now being broadened to include a larger group of non-expert users as well as advocacy organizations. Several organized groups such as the Creative Commons and global development agencies have also adopted the open-source concepts according to their own aims and for their own purposes.

The factors affecting the open-source movement's legal formalization are primarily based on recent political discussion over copyright, appropriation, and intellectual property.

Historically, researchers have characterized open-source contributors as a centralized, onion-shaped group. The center of the onion consists of the core contributors who drive the project forward through large amounts of code and software design choices. The second-most layer are contributors who respond to pull requests and bug reports. The third-most layer out are contributors who mainly submit bug reports. The farthest out layer are those who watch the repository and users of the software that's generated. This model has been used in research to understand the lifecycle of open-source software, understand contributors to open-source software projects, how tools such as  can help contributors at the various levels of involvement in the project, and further understand how the distributed nature of open source software may affect the productivity of developers.

Some researchers have disagreed with this model. Crowston et al.'s work has found that some teams are much less centralized and follow a more distributed workflow pattern. The authors report that there's a weak correlation between project size and centralization, with smaller projects being more centralized and larger projects showing less centralization. However, the authors only looked at bug reporting and fixing, so it remains unclear whether this pattern is only associated with bug finding and fixing or if centralization does become more distributed with size for every aspect of the open-source paradigm.

An understanding of a team's centralization versus distributed nature is important as it may inform tool design and aid new developers in understanding a team's dynamic. One concern with open-source development is the high turnover rate of developers, even among core contributors (those at the center of the "onion"). In order to continue an open-source project, new developers must continually join but must also have the necessary skill-set to contribute quality code to the project. Through a study of GitHub contribution on open-source projects, Middleton et al. found that the largest predictor of contributors becoming full-fledged members of an open-source team (moving to the "core" of the "onion") was whether they submitted and commented on pull requests. The authors then suggest that GitHub, as a tool, can aid in this process by supporting "checkbox" features on a team's open-source project that urge contributors to take part in these activities.

With the growth and attention on the open-source movement, the reasons and motivations of programmers for creating code for free has been under investigation. In a paper from the 15th Annual Congress of the European Economic Association on the open-source movement, the incentives of programmers on an individual level as well as on a company or network level were analyzed. What is essentially the intellectual gift giving of talented programmers challenges the "self-interested-economic-agent paradigm", and has made both the public and economists search for an understanding of what the benefits are for programmers.

The vast majority of programmers in open-source communities are male. In a 2006 study for the European Union on free and open-source software communities, researchers found that only 1.5% of all contributors are female. Although women are generally underrepresented in computing, the percentage of women in tech professions is actually much higher, close to 25%. This discrepancy suggests that female programmers are overall less likely than male programmers to participate in open-source projects.

Some research and interviews with members of open-source projects have described a male-dominated culture within open-source communities that can be unwelcoming or hostile towards females. There are initiatives such as Outreachy that aim to support more women and other underrepresented gender identities to participate in open-source software. However, within the discussion forums of open-source projects the topic of gender diversity can be highly controversial and even inflammatory. A central vision in open-source software is that because the software is built and maintained on the merit of individual code contributions, open-source communities should act as a meritocracy. In a meritocracy, the importance of an individual in the community depends on the quality of their individual contributions and not demographic factors such as age, race, religion, or gender. Thus proposing changes to the community based on gender, for example, to make the community more inviting towards females, go against the ideal of a meritocracy by targeting certain programmers by gender and not based on their skill alone.

There is evidence that gender does impact a programmer's perceived merit in the community. A 2016 study identified the gender of over one million programmers on GitHub , by linking the programmer's GitHub account to their other social media accounts. Between male and female programmers, the researchers found that female programmers were actually more likely to have their pull requests accepted into the project than male programmers, however only when the female had a gender-neutral profile. When females had profiles with a name or image that identified them as female, they were less likely than male programmers to have their pull requests accepted. Another study in 2015 found that of open-source projects on GitHub, gender diversity was a significant positive predictor of a team's productivity, meaning that open-source teams with a more even mix of different genders tended to be more highly productive.

Many projects have adopted the Contributor Covenant code of conduct in an attempt to address concerns of harassment of minority developers. Anyone found breaking the code of conduct can be disciplined and ultimately removed from the project.

In order to avoid offense to minorities many software projects have started to mandate the use of inclusive language and terminology.

Libraries are using open-source software to develop information as well as library services. The purpose of open source is to provide a software that is cheaper, reliable and has better quality. The one feature that makes this software so sought after is that it is free. Libraries in particular benefit from this movement because of the resources it provides. They also promote the same ideas of learning and understanding new information through the resources of other people. Open source allows a sense of community. It is an invitation for anyone to provide information about various topics. The open-source tools even allow libraries to create web-based catalogs. According to the IT source there are various library programs that benefit from this.

Government agencies and infrastructure software â€” Government Agencies are utilizing open-source infrastructure software, like the Linux operating system and the Apache Web-server into software, to manage information. In 2005, a new government lobby was launched under the name National Center for Open Source Policy and Research (NCOSPR) "a non-profit organization promoting the use of open source software solutions within government IT enterprises."

Open-source movement in the military â€” Open-source movement has potential to help in the military. The open-source software allows anyone to make changes that will improve it. This is a form of invitation for people to put their minds together to grow a software in a cost efficient manner. The reason the military is so interested is because it is possible that this software can increase speed and flexibility. Although there are security setbacks to this idea due to the fact that anyone has access to change the software, the advantages can outweigh the disadvantages. The fact that the open-source programs can be modified quickly is crucial.
A support group was formed to test these theories. The Military Open Source Software Working Group was organized in 2009 and held over 120 military members. Their purpose was to bring together software developers and contractors from the military to discover new ideas for reuse and collaboration. Overall, open-source software in the military is an intriguing idea that has potential drawbacks but they are not enough to offset the advantages.

Open source in education â€” Colleges and organizations use software predominantly online to educate their students. Open-source technology is being adopted by many institutions because it can save these institutions from paying companies to provide them with these administrative software systems. One of the first major colleges to adopt an open-source system was Colorado State University in 2009 with many others following after that. Colorado State Universities system was produced by the Kuali Foundation who has become a major player in open-source administrative systems. The Kuali Foundation defines itself as a group of organizations that aims to "build and sustain open-source software for higher education, by higher education." There are many other examples of open-source instruments being used in education other than the Kuali Foundation as well.

"For educators, The Open Source Movement allowed access to software that could be used in teaching students how to apply the theories they were learning". With open networks and software, teachers are able to share lessons, lectures, and other course materials within a community. OpenTechComm is a program that is dedicated to "open access, open use, and open edits- text book or pedagogical resource that teachers of technical and professional communication courses at every level can rely on to craft free offerings to their students." As stated earlier, access to programs like this would be much more cost efficient for educational departments.

Open source in healthcare â€” Created in June 2009 by the nonprofit eHealthNigeria, the open-source software OpenMRS is used to document health care in Nigeria. The use of this software began in Kaduna, Nigeria to serve the purpose of public health. OpenMRS manages features such as alerting health care workers when patients show warning signs for conditions and records births and deaths daily, among other features. The success of this software is caused by its ease of use for those first being introduced to the technology, compared to more complex proprietary healthcare software available in first world countries. This software is community-developed and can be used freely by anyone, characteristic of open-source applications. So far, OpenMRS is being used in Rwanda, Mozambique, Haiti, India, China, and the Philippines. The impact of open source in healthcare is also observed by Apelon Inc, the "leading provider of terminology and data interoperability solutions". Recently, its Distributed Terminology System (Open DTS) began supporting the open-source MySQL database system. This essentially allows for open-source software to be used in healthcare, lessening the dependence on expensive proprietary healthcare software. Due to open-source software, the healthcare industry has available a free open-source solution to implement healthcare standards. Not only does open source benefit healthcare economically, but the lesser dependence on proprietary software allows for easier integration of various systems, regardless of the developer.

Originally, IBM was not the company that branched out to any means of open source software. They upheld into believing that Intellectual Property along with other privatized means of software around the 1990's. From a citation, it wasn't until IBM was challenged by the evolving competitive market, specifically from Microsoft, that they decided to invest their resources more into open source software. Since then, their focus shifted more on customer service and a more robust software support. IBM has been a leading proponent of the Open Source Initiative , and began supporting Linux in 1998.

As another example, IBM had decided to make the Eclipse IDE(integrated development environment) open-source causing other companies to release their other IDEs due to Eclipse's popularity and outreach to the market.

Before summer of 2008, Microsoft has generally been known as an enemy of the open-source community . The company's anti-open-source sentiment was enforced by former CEO Steve Ballmer , who referred to Linux, a widely used open-source software, as a "cancer that attaches itself ... to everything it touches." Microsoft also threatened Linux that they would charge royalties for violating 235 of their patents.

In 2004, Microsoft lost a European Union court case, and lost the appeal in 2007, and their further appeal in 2012: being convicted of abusing its dominant position.  Specifically they had withheld inter-operability information with the open-source Samba (software) project, which can be run on many platforms and aims to "removing barriers to interoperability".

In 2008, however, Sam Ramji, the then head of open-source-software strategy in Microsoft, began working closely with Bill Gates to develop a pro-open-source attitude within the software industry as well as Microsoft itself. Ramji, before leaving the company in 2009, built Microsoft's familiarity and involvement with open source, which is evident in Microsoft's contributions of open-source code to Microsoft Azure among other projects. These contributions would have been previously unimaginable by Microsoft. Microsoft's change in attitude about open source and efforts to build a stronger open-source community is evidence of the growing adoption and adaptation of open source.