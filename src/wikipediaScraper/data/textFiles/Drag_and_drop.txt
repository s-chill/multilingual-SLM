In computer graphical user interfaces , drag and drop is a pointing device gesture in which the user selects a virtual object by "grabbing" it and dragging it to a different location or onto another virtual object. In general, it can be used to invoke many kinds of actions, or create various types of associations between two abstract objects .

As a feature, drag-and-drop support is not found in all software , though it is sometimes a fast and easy-to-learn technique. However, it is not always clear to users that an item can be dragged and dropped, or what command is performed by the drag and drop, which can decrease usability.

The basic sequence involved in drag and drop is:

Dragging requires more physical effort than moving the same pointing device without holding down any buttons. Because of this, a user cannot move as quickly and precisely while dragging (see Fitts' law ). However, drag-and-drop operations have the advantage of thoughtfully chunking together two operands (the object to drag, and the drop location) into a single action. Extended dragging and dropping (as in graphic design) can stress the mousing hand.

A design problem appears when the same button selects and drags items. Imprecise movement can cause an attempt to select an object to register as a dragging motion.

Another problem is that the target of the dropping can be hidden under other objects. The user would have to stop the dragging, make both the source and the target visible and start again. In classic Mac OS the top-of-screen menu bar served as a universal "drag cancel" target. This issue has been dealt with in Mac OS X with the introduction of Expos√© .

Drag and drop, called click and drag at the time, was used in the original Macintosh to manipulate files (for example, copying them between disks or folders ). System 7 added the ability to open a document in an application by dropping the document icon onto the application's icon.

Apple added "Macintosh Drag and Drop" to System 7.5 , extending "click and drag" to common clipboard operations like copying or moving textual content within a document. Content could also be dragged into the filesystem to create a "clipping file" which could then be stored and reused. Files could also be dropped on application windows, for example to enclose a document in an email, or add an image to a word processor document.

For most of its history Mac OS has used a single button mouse with the button covering a large portion of the top surface of the mouse. This may mitigate the ergonomic concerns of keeping the button pressed while dragging.

The Workplace Shell of OS/2 uses dragging and dropping extensively with the secondary mouse button , leaving the primary one for selection and clicking.
Its use like that of other advanced Common User Access features distinguished native OS/2 applications from platform-independent ports.

The HTML5 working draft specification includes support for drag and drop. HTML5 supports different kinds of dragging and dropping features including:

Based on needed action, one of the above types can be used. Note that when an HTML element is dragged for moving its current position, its ID is sent to the destination parent element; so it sends a text and can be considered as the first group.

Google's web-based e-mail application Gmail supports drag-and-drop of images and attachments in the latest Google Chrome browser and Apple's Safari (5.x). Google Images permits users to drag and drop image files into a browser to perform a reverse image search .

Touch screen interfaces also include drag and drop, or more precisely, long press, and then drag, e.g. on the iPhone or Android home screens.

iOS 11 implements a drag-and-drop feature which allows the user to touch items (and tap with other fingers to drag more) within an app or between apps on iPads . On iPhones, the functionality is only available within the same app that the user started the drag.

Drag and drop is considered an important program construction approach in many end-user development systems. In contrast to more traditional, text-based programming languages, many end-user programming languages are based on visual components such as tiles or icons that are manipulated by end users through drag-and-drop interfaces. AgentSheets , a programming environment for kids, introduced the modern notion of drag and drop blocks programming providing 4 core affordances: 1) Blocks that are end-user composable, 2) blocks are end-user editable, 3) blocks can be nested to represent tree structures, 4) blocks are arranged geometrically to define syntax. Drag and drop is also featured in many shader editing programs for graphics tools, such as Blender . Drag and drop also features in some video game engines, including Unreal Engine , GameMaker Studio , Construct 2 and, with expansion, Unity .

A common example is dragging an icon on a virtual desktop to a special trashcan icon to delete a file .

Further examples include: