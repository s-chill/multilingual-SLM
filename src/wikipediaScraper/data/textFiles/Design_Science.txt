Design science research (DSR) is a research paradigm focusing on the development and validation of prescriptive knowledge in information science. Herbert Simon distinguished the natural sciences, concerned with explaining how things are, from design sciences which are concerned with how things ought to be, that is, with devising artifacts to attain goals. Design science research methodology (DSRM) refers to the research methodologies associated with this paradigm. It spans the methodologies of several research disciplines, for example information technology , which offers specific guidelines for evaluation and iteration within research projects.

DSR focuses on the development and performance of (designed) artifacts with the explicit intention of improving the functional performance of the artifact. DSRM is typically applied to categories of artifacts including algorithms , human/computer interfaces , design methodologies (including process models ) and languages. Its application is most notable in the Engineering and Computer Science disciplines, though is not restricted to these and can be found in many disciplines and fields. DSR, or constructive research, in contrast to explanatory science research, has academic research objectives generally of a more pragmatic nature. Research in these disciplines can be seen as a quest for understanding and improving human performance . Such renowned research institutions as the MIT Media Lab , Stanford University 's Center for Design Research, Carnegie Mellon University 's Software Engineering Institute, Xerox ’s PARC, and Brunel University London ’s Organisation and System Design Centre, use the DSR approach.

Design science is a valid research methodology to develop solutions for practical engineering problems. Design science is particularly suitable for wicked problem s.

The main goal of DSR is to develop knowledge that professionals of the discipline in question can use to design solutions for their field problems. Design sciences focus on the process of making choices on what is possible and useful for the creation of possible futures,
rather than on what is currently existing. This mission can be compared to the one of the ‘explanatory sciences’, like the natural sciences and sociology, which is to develop knowledge to describe, explain and predict. Hevner states that the main purpose of DSR is achieving knowledge and understanding of a problem domain by building and application of a designed artifact.

Since the first days of computer science , computer scientists have been doing DSR without naming it. They have developed new architectures for computers, new programming languages, new compilers, new algorithms, new data and file structures, new data models, new database management systems, and so on.  Much of the early research was focused on systems development approaches and methods. The dominant research philosophy in many disciplines has focused on developing cumulative, theory-based research results in order to make prescriptions. It seems that this ‘theory-with-practical-implications’ research strategy has not delivered on this aim, which led to search for practical research methods such as DSR.

The design process is a sequence of expert activities that produces an innovative product. The artifact enables the researcher to get a better grasp of the problem; the re-evaluation of the problem improves the quality of the design process and so on. This build-and-evaluate loop is typically iterated a number of times before the final design artifact is generated. In DSR, the focus is on the so-called field-tested and grounded technological rule as a possible product of Mode 2 research with the potential to improve the relevance of academic research in management. Mode 1 knowledge production is purely academic and mono-disciplinary, while Mode 2 is multidisciplinary and aims at solving complex and relevant field problems.

Hevner et al. have presented a set of guidelines for DSR within the discipline of Information Systems (IS). DSR requires the creation of an innovative, purposeful artifact for a special problem domain . The artifact must be evaluated in order to ensure its utility for the specified problem. In order to form a novel research contribution, the artifact must either solve a problem that has not yet been solved, or provide a more effective solution. Both the construction and evaluation of the artifact must be done rigorously, and the results of the research presented effectively both to technology-oriented and management -oriented audiences.

Hevner counts 7 guidelines for a DSR:

Transparency in DSR is becoming an emerging concern. DSR strives to be practical and relevant. Yet few researchers have examined the extent to which practitioners can meaningfully utilize theoretical knowledge produced by DSR in solving concrete real-world problems. There is a potential gulf between theoretical propositions and concrete issues faced in practice—a challenge known as design theory indeterminacy . Guidelines for addressing this challenges are provided in Lukyanenko et al. 2020.

The engineering cycle is a framework used in Design Science for Information Systems and Software Engineering, proposed by Roel Wieringa .

Artifacts within DSR are perceived to be knowledge containing. This knowledge ranges from the design logic, construction methods and tool to assumptions about the context in which the artifact is intended to function (Gregor, 2002).

The creation and evaluation of artifacts thus forms an important part in the DSR process which was described by Hevner et al., (2004) and supported by March and Storey (2008) as revolving around “build and evaluate”.

DSR artifacts can broadly include: models, methods, constructs, instantiations and design theories (March & Smith, 1995; Gregor 2002; March & Storey, 2008, Gregor and Hevner 2013), social innovations, new or previously unknown properties of technical/social/informational resources (March, Storey, 2008), new explanatory theories, new design and developments models and implementation processes or methods (Ellis & Levy 2010).

DSR can be seen as an embodiment of three closely related cycles of activities. The relevance cycle initiates DSR with an application context that not only provides the requirements for the research as inputs but also defines acceptance criteria for the ultimate evaluation of the research results.  The rigor cycle provides past knowledge to the research project to ensure its innovation. It is incumbent upon the researchers to thoroughly research and reference the knowledge base in order to guarantee that the designs produced are research contributions and not routine designs based upon the application of well-known processes.  The central design cycle iterates between the core activities of building and evaluating the design artifacts and processes of the research.

DSR in itself implies an ethical change from describing and explaining of the existing world to shaping it. One can question the values of information system research, i.e., whose values and what values dominate it, emphasizing that research may openly or latently serve the interests of particular dominant groups. The interests served may be those of the host organization as perceived by its top management, those of information system users, those of information system professionals or potentially those of other stakeholder groups in society.

There are limited references to examples of DSR, but Adams has completed two PhD research topics using Peffers et al.'s DSRP (both associated with digital forensics but from different perspectives):

2013: The Advanced Data Acquisition Model (ADAM): A process model for digital forensic practice

2024: The Advanced Framework for Evaluating Remote Agents (AFERA): A Framework for Digital Forensic Practitioners