An OpenURL is similar to a web address, but instead of referring to a physical website, it refers to an article, book, patent, or other resource within a website.

OpenURLs are similar to permalinks because they are permanently connected to a resource, regardless of which website the resource is connected to.

Libraries and other resource centers are the most common place to find OpenURLs because an OpenURL can help Internet users find a copy of a resource that they may otherwise have limited access to.

The source that generates an OpenURL is often a bibliographic citation or bibliographic record in a database. Examples of these databases include Ovid Technologies , Web of Science , Chemical Abstracts Service , Modern Language Association and Google Scholar .

The National Information Standards Organization (NISO) has developed standards for OpenURL and its data container as American National Standards Institute (ANSI) standard ANSI/NISO Z39.88-2004. OpenURL standards create a clear structure for links that go from information resource databases (sources) to library services (targets).

A target is a resource or service that helps satisfy a user's information needs. Examples of targets include full-text repositories, online journals, online library catalogs and other Web resources and services. OpenURL knowledge bases provide links to the appropriate targets available.

OpenURL was created by Herbert Van de Sompel , a librarian at the University of Ghent , in the late 1990s. His link-server software, SFX , was purchased by the library automation company Ex Libris Group which popularized OpenURL in the information industry.

In 2005, a revised version of OpenURL (version 1.0) became ANSI/NISO standard Z39.88-2004, with Van de Sompel's version designated as version 0.1.
The new standard provided a framework for describing new formats, as well as defining XML versions of the various formats.

In 2006 a research report found some problems affecting the efficiency of OpenURL linking and recommended the creation of a group to establish best practice solutions. The KBART ( Knowledge Bases And Related Tools ) working group has been set up to progress the recommendations of the research report. OpenURL standards and reporting work continues with NISO's IOTA (Improving OpenURLs Through Analytics) project, which produced a reporting tool and research summary in 2013 noting the benefits of data analysis to improve link resolution.

In June 2006, NISO designated the Online Computer Library Center (OCLC) as the "maintenance and registration agency" (or "registry agent") of the OpenURL standard, for an initial term of five years. In 2011, OCLC researchers highlighted their work in a NISO journal article, noting that "the OpenURL standard is one of the most heavily used NISO standards". As registry agent, OCLC was responsible for reviewing proposed extensions to the standard and maintaining a listing of those it approved. Per the standard, registry entries could specify particular metadata fields and their representation. The registry had the canonical URL http://www.openurl.info/registry .

In 2022, OCLC updated its OpenURL Registry webpage to state that the registry is no longer supported or maintained, saying it had been an "experimental research project" and "research prototype application". The standard registry URL now redirects to an archived version of the site, described as "the Frozen (deprecated) version of the Registry for the OpenURL Framework".

The most common application of OpenURL is to assist in the resolution of a request for a web resource (such as an online article).  An OpenURL includes information about the referenced resource itself, and context information â€” both the context in which the OpenURL occurs (for example, a page of search results from a library catalog) and the context of the request (for example, the particular user making the request).  If a different context is expressed in the URL, a different copy ends up resolved to.  Changes in context are predictable, and do not require the original creator of the hyperlink (for example, the journal publisher) to handcraft different URLs for different contexts.

For example, changing either the base URL or a parameter in the query string can mean that the OpenURL resolves to a copy of a resource in a different library.  So the same OpenURL, contained for instance in an electronic journal, can be adjusted by any library to provide access to their own copy of the resource, without completely overwriting the journal's hyperlink. The journal provider, in turn, is no longer required to provide a different version of the journal, with different hyperlinks, for each subscribing library (See also COinS ).

An OpenURL consists of a base URL , which contains the address of the user's institutional link-server, followed by a query string , consisting of key-value pairs serializing a ContextObject . The ContextObject is most often bibliographic data, but as of version 1.0 OpenURL can also include information about the requester, the resource containing the hyperlink , the type of service required, and so forth. For example:

is a version 0.1 OpenURL describing a book. http://resolver.example.edu/cgi is the base URL of an example link-server.

In version 1.0, this same link becomes somewhat longer:

The above query string consists of the following key-value pairs:

Keys always consist of safe characters and are not encoded, but values are URL-encoded .

Several companies market link server systems. Some proprietary options include OCLC (as part of WorldCat Local ), Ex Libris ( SFX and Alma UResolver), Serials Solutions ( 360 Link Archived 2009-06-01 at the Wayback Machine , formerly known as Article Linker), Innovative Interfaces, Inc. (WebBridge), EBSCO Information Services ( Full Text Finder ), Ovid (LinkSolver), SirsiDynix (Resolver), Fretwell-Downing (OL2), TDNet , Inc. (TOUResolver), WT Cox Information Services ( Journal Finder ), R. R. Bowker (Ulrichs Resource Linker) and Infor (Vlink).

Open-source link resolvers include CUFTS and Umlaut . There are also open-source tools for manipulating OpenURLs and the Code4Lib community maintains a list of these.

OpenURL is usually implemented by information providers by dynamically inserting an appropriate base URL into web pages sent to an authenticated user. OpenURL COinS is a specification that allows free services like Wikipedia to provide OpenURLs by cooperating with client side software agents. Federated search software presents OpenURL links in record fields by employing the library's subscriber links to link servers facilitating access to full-text resources from bibliographic record hyperlinks.