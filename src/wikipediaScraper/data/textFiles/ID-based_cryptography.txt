Identity-based cryptography is a type of public-key cryptography in which a publicly known string representing an individual or organization is used as a public key . The public string could include an email address, domain name, or a physical IP address.

The first implementation of identity-based signatures and an email-address based public-key infrastructure ( PKI ) was developed by Adi Shamir in 1984, which allowed users to verify digital signatures using only public information such as the user's identifier. Under Shamir's scheme, a trusted third party would deliver the private key to the user after verification of the user's identity, with verification essentially the same as that required for issuing a certificate in a typical PKI.

Shamir similarly proposed identity-based encryption , which appeared particularly attractive since there was no need to acquire an identity's public key prior to encryption. However, he was unable to come up with a concrete solution, and identity-based encryption remained an open problem for many years. The first practical implementations were finally devised by Sakai in 2000, and Boneh and Franklin in 2001. These solutions were based on bilinear pairings . Also in 2001, a solution was developed independently by Clifford Cocks .

Closely related to various identity-based encryption schemes are identity based key agreement schemes.  One of the first identity based key agreement algorithms was published in 1986, just two years after Shamir's identity based signature.  The author was E. Okamoto. Identity based key agreement schemes also allow for "escrow free" identity based cryptography.  A notable example of such an escrow free identity based key agreement is the McCullagh-Barreto's "Authenticated Key Agreement without Escrow" found in section 4 of their 2004 paper, "A New Two-Party Identity-Based Authenticated Key Agreement". A variant of this escrow free key exchange is standardized as the identity based key agreement in the Chinese identity based standard SM9 .

Identity-based systems allow any party to generate a public key from a known identity value, such as an ASCII string.  A trusted third party, called the private key generator (PKG), generates the corresponding private keys.  To operate, the PKG first publishes a master public key, and retains the corresponding master private key (referred to as master key ).  Given the master public key, any party can compute a public key corresponding to the identity ID by combining the master public key with the identity value.  To obtain a corresponding private key, the party authorized to use the identity ID contacts the PKG, which uses the master private key to generate the private key for the identity ID .

Identity-based systems have a characteristic problem in operation. Suppose Alice and Bob are users of such a system. Since the information needed to find Alice's public key is completely determined by Alice's ID and the master public key, it is not possible to revoke Alice's credentials and issue new credentials without either (a) changing Alice's ID (usually a phone number or an email address which will appear in a corporate directory); or (b) changing the master public key and re-issuing private keys to all users, including Bob.

This limitation may be overcome by including a time component (e.g. the current month) in the identity.