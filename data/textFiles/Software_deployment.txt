Software deployment is all of the activities that make a software system available for use.

The general deployment process consists of several interrelated activities with possible transitions between them. These activities can occur on the producer side or on the consumer side or both. Because every software system is unique, the precise processes or procedures within each activity can hardly be defined. Therefore, "deployment" should be interpreted as a general process that has to be customized according to specific requirements or characteristics.

When computers were extremely large, expensive, and bulky ( mainframes and minicomputers ), the software was often bundled together with the hardware by manufacturers. If business software needed to be installed on an existing computer, this might require an expensive, time-consuming visit by a systems architect or a consultant . For complex, on-premises installation of enterprise software today, this can still sometimes be the case.

However, with the development of mass-market software for the new age of microcomputers in the 1980s came new forms of software distribution –  first cartridges , then Compact Cassettes , then floppy disks , then (in the 1990s and later) optical media , the internet and flash drives . This meant that software deployment could be left to the customer. However, it was also increasingly recognized over time that configuration of the software by the customer was important and that this should ideally have a user-friendly interface (rather than, for example, requiring the customer to edit registry entries on Windows).

In pre-internet software deployments, deployments (and their closely related cousin, new software releases) were of necessity expensive, infrequent, bulky affairs. It is arguable therefore that the spread of the internet made end-to-end agile software development possible. Indeed, the advent of cloud computing and software as a service meant that software could be deployed to a large number of customers in minutes, over the internet. This also meant that typically, deployment schedules were now determined by the software supplier, not by the customers. Such flexibility led to the rise of continuous delivery as a viable option, especially for less risky web applications .

Other options for software deployment include blue–green deployment and canary release deployment.

The complexity and variability of software products have fostered the emergence of specialized roles for coordinating and engineering the deployment process.  For desktop systems, end-users frequently also become the "software deployers" when they install a software package on their machine. The deployment of enterprise software involves many more roles, and those roles typically change as the application progresses from the test (pre-production) to production environments.  Typical roles involved in software deployments for enterprise applications may include: