In computer science , humanâ€“computer interaction , and interaction design , direct manipulation is an approach to interfaces which involves continuous representation of objects of interest together with rapid, reversible, and incremental actions and feedback. As opposed to other interaction styles, for example, the command language , the intention of direct manipulation is to allow a user to manipulate objects presented to them, using actions that correspond at least loosely to manipulation of physical objects .  An example of direct manipulation is resizing a graphical shape , such as a rectangle, by dragging its corners or edges with a mouse .

Having real-world metaphors for objects and actions can make it easier for a user to learn and use an interface (some might say that the interface is more natural or intuitive), and rapid, incremental feedback allows a user to make fewer errors and complete tasks in less time, because they can see the results of an action before completing the action, thus evaluating the output and compensating for mistakes.

The term was introduced by Ben Shneiderman in 1982 within the context of office applications and the desktop metaphor . Individuals in academia and computer scientists doing research on future user interfaces often put as much or even more stress on tactile control and feedback, or sonic control and feedback than on the visual feedback given by most GUIs . As a result, the term  has been more widespread in these environments.

Direct manipulation is closely associated with interfaces that use windows, icons, menus, and a pointing device ( WIMP GUI) as these almost always incorporate direct manipulation to at least some degree. However, direct manipulation should not be confused with these other terms, as it does not imply the use of windows or even graphical output. For example, direct manipulation concepts can be applied to interfaces for blind or vision-impaired users, using a combination of tactile and sonic devices and software.

Compromises to the degree to which an interface implements direct manipulation are frequently seen. For some examples, most versions of windowing interfaces allow users to reposition a window by dragging it with the mouse. In early systems, redrawing the window while dragging was not feasible due to computational limitations. Instead, a rectangular outline of the window was drawn while dragging. The complete window contents were redrawn once the user released the mouse button.

Because of the difficulty of visualizing and manipulating various aspects of computer graphics, including geometry creation and editing, animation, the layout of objects and cameras, light placement, and other effects, direct manipulation is a significant part of 3D computer graphics.  There is standard direct manipulation widgets as well as many unique widgets that are developed either as a better solution to an old problem or as a solution for a new and/or unique problem.  The widgets attempt to allow the user to modify an object in any possible direction while also providing easy guides or constraints to allow the user to easily modify an object in the most common directions, while also attempting to be as intuitive as to the function of the widget as possible.  The three most ubiquitous transformation widgets are mostly standardized and are:

Depending on the specific standard uses of an object, different kinds of widgets may be used.  For example, a light in computer graphics is, like any other object, also defined by a transformation (translation and rotation), but it is sometimes positioned and directed simply with its endpoint positions. This is because it may be more intuitive to define the location of the light source and then define the light's target, rather than rotating it around the coordinate axes to point it at a known position.

Other widgets may be unique for a particular tool, such as edge controls to change the cone of a spotlight, points and handles to define the position and tangent vector for a spline control point, circles of variable size to define a blur filter width or paintbrush size, IK targets for hands and feet, or color wheels and swatches for quickly choosing colors.  Complex widgets may even incorporate some from scientific visualization to efficiently present relevant data (such as vector fields for particle effects or false color images to display vertex maps).

Direct manipulation, as well as user interface design in general, for 3D computer graphics tasks, is still an active area of invention and innovation. The process of generating CG images is not considered to be intuitive or easy in comparison to the difficulty of what the user wants to do, especially for complex and less common tasks.  The user interface for word processing, for example, is commonly used. It is easy to learn for new users and is sufficient for most word processing purposes, so it is a mostly solved and standardized UI. However, the user interfaces for 3D computer graphics are usually either challenging to learn and use and not sufficiently powerful for complex tasks and/or difficult to learn and use, so direct manipulation and user interfaces will vary wildly from application to application.