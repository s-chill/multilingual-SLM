Visual Studio is an integrated development environment (IDE) developed by Microsoft . It is used to develop computer programs including websites , web apps , web services and mobile apps . Visual Studio uses Microsoft software development platforms including Windows API , Windows Forms , Windows Presentation Foundation (WPF), Microsoft Store and Microsoft Silverlight . It can produce both native code and managed code .

Visual Studio includes a code editor supporting IntelliSense (the code completion component) as well as code refactoring . The integrated debugger works as both a source-level debugger and as a machine-level debugger. Other built-in tools include a code profiler , designer for building GUI applications, web designer , class designer, and database schema designer. It accepts plug-ins that expand the functionality at almost every level—including adding support for source control systems (like Subversion and Git ) and adding new toolsets like editors and visual designers for domain-specific languages or toolsets for other aspects of the software development lifecycle (like the Azure DevOps client: Team Explorer).

Visual Studio supports 36 different programming languages and allows the code editor and debugger to support (to varying degrees) nearly any programming language, provided a language-specific service exists. Built-in languages include C , C++ , C++/CLI , Visual Basic .NET , C# , F# , JavaScript , TypeScript , XML , XSLT , HTML , and CSS . Support for other languages such as Python , Ruby , Node.js , and M among others is available via plug-ins . Java (and J# ) were supported in the past.

The most basic edition of Visual Studio, the Community edition, is available free of charge. The slogan for Visual Studio Community edition is "Free, fully-featured IDE for students, open-source and individual developers". As of February 19, 2024 , Visual Studio 2022 is a current production-ready version. Visual Studio 2013, 2015 and 2017 are on Extended Support, while 2019 is on Mainstream Support.

Visual Studio does not support any programming language, solution or tool intrinsically; instead, it allows the plugging of functionality coded as a VSPackage. When installed, the functionality is available as a Service . The IDE provides three services: SVsSolution, which provides the ability to enumerate projects and solutions; SVsUIShell, which provides windowing and UI functionality (including tabs, toolbars, and tool windows); and SVsShell, which deals with registration of VSPackages. In addition, the IDE is also responsible for coordinating and enabling communication between services. All editors, designers, project types and other tools are implemented as VSPackages. Visual Studio uses COM to access the VSPackages. The Visual Studio SDK also includes the Managed Package Framework ( MPF ), which is a set of managed wrappers around the COM-interfaces that allow the Packages to be written in any CLI compliant language . However, MPF does not provide all the functionality exposed by the Visual Studio COM interfaces. The services can then be consumed for creation of other packages, which add functionality to the Visual Studio IDE.

Support for programming languages is added by using a specific VSPackage called a Language Service . A language service defines various interfaces which the VSPackage implementation can implement to add support for various functionalities. Functionalities that can be added this way include syntax coloring, statement completion, brace matching, parameter information tooltips, member lists, and error markers for background compilation. If the interface is implemented, the functionality will be available for the language. Language services are implemented on a per-language basis. The implementations can reuse code from the parser or the compiler for the language. Language services can be implemented either in native code or managed code . For native code, either the native COM interfaces or the Babel Framework (part of Visual Studio SDK) can be used. For managed code, the MPF includes wrappers for writing managed language services.

Visual Studio does not include any source control support built in but it defines two alternative ways for source control systems to integrate with the IDE. A Source Control VSPackage can provide its own customised user interface. In contrast, a source control plugin using the MSSCCI (Microsoft Source Code Control Interface) provides a set of functions that are used to implement various source control functionality, with a standard Visual Studio user interface. MSSCCI was first used to integrate Visual SourceSafe with Visual Studio 6.0 but was later opened up via the Visual Studio SDK. Visual Studio .NET 2002 used MSSCCI 1.1, and Visual Studio .NET 2003 used MSSCCI 1.2. Visual Studio 2005, 2008, and 2010 use MSSCCI Version 1.3, which adds support for rename and delete propagation, as well as asynchronous opening.

Visual Studio supports running multiple instances of the environment (each with its own set of VSPackages). The instances use different registry hives (see MSDN 's definition of the term "registry hive " in the sense used here) to store their configuration state and are differentiated by their AppId (Application ID). The instances are launched by an AppId-specific .exe that selects the AppId, sets the root hive, and launches the IDE. VSPackages registered for one AppId are integrated with other VSPackages for that AppId. The various product editions of Visual Studio are created using the different AppIds. The Visual Studio Express edition products are installed with their own AppIds, but the Standard, Professional, and Team Suite products share the same AppId. Consequently, one can install the Express editions side-by-side with other editions, unlike the other editions which update the same installation. The professional edition includes a superset of the VSPackages in the standard edition, and the team suite includes a superset of the VSPackages in both other editions. The AppId system is leveraged by the Visual Studio Shell in Visual Studio 2008.

Visual Studio includes a code editor that supports syntax highlighting and code completion using IntelliSense for variables , functions , methods , loops , and LINQ queries. IntelliSense is supported for the included languages, as well as for XML , Cascading Style Sheets , and JavaScript when developing web sites and web applications . Autocomplete suggestions appear in a modeless list box over the code editor window, in proximity of the editing cursor . In Visual Studio 2008 onwards, it can be made temporarily semi-transparent to see the code obstructed by it. The code editor is used for all supported languages.

The code editor in Visual Studio also supports setting bookmarks in code for quick navigation. Other navigational aids include collapsing code blocks and incremental search , in addition to normal text search and regex search. The code editor also includes a multi-item clipboard and a task list. The code editor supports code snippets, which are saved templates for repetitive code and can be inserted into code and customized for the project being worked on. A management tool for code snippets is built in as well. These tools are surfaced as floating windows which can be set to automatically hide when unused or docked to the side of the screen. The code editor in Visual Studio also supports code refactoring including parameter reordering, variable and method renaming, interface extraction, and encapsulation of class members inside properties, among others.

Visual Studio includes a debugger that works both as a source-level debugger and as a machine-level debugger. It works with both managed code as well as native code and can be used for debugging applications written in any language supported by Visual Studio. In addition, it can also attach to running processes, monitor, and debug those processes. If source code for the running process is available, it displays the code as it is being run. If source code is not available, it can show the disassembly . The Visual Studio debugger can also create memory dumps as well as load them later for debugging. Multi-threaded programs are also supported. The debugger can be configured to be launched when an application running outside the Visual Studio environment crashes.

The Visual Studio Debugger allows setting breakpoints (which allow execution to be stopped temporarily at a certain position) and watches (which monitor the values of variables as the execution progresses). Breakpoints can be conditional, meaning they get triggered when the condition is met. Code can be stepped over , i.e., run one line (of source code) at a time. It can either step into functions to debug inside it, or step over it, i.e., the execution of the function body isn't available for manual inspection. The debugger supports Edit and Continue , i.e., it allows code to be edited as it is being debugged. When debugging, if the mouse pointer hovers over any variable, its current value is displayed in a tooltip ("data tooltips"), where it can also be modified if desired. During coding, the Visual Studio debugger lets certain functions be invoked manually from the Immediate tool window. The parameters to the method are supplied at the Immediate window.

Visual Studio includes many visual designers to aid in the development of applications. These tools include:

Microsoft Visual Studio can write high-quality code with comprehensive testing tools to aid in the development of applications. These tools include:

Unit testing , IntelliTest, Live Unit Testing, Test Explorer, CodeLens test indicators, code coverage analysis, Fakes.

Visual Studio allows developers to write extensions for Visual Studio to extend its capabilities. These extensions "plug into" Visual Studio and extend its functionality. Extensions come in the form of macros , add-ins , and packages . Macros represent repeatable tasks and actions that developers can record programmatically for saving, replaying, and distributing. Macros, however, cannot implement new commands or create tool windows. They are written using Visual Basic and are not compiled. Add-Ins provide access to the Visual Studio object model and can interact with the IDE tools. Add-Ins can be used to implement new functionality and can add new tool windows. Add-Ins are plugged into the IDE via COM and can be created in any COM-compliant languages. Packages are created using the Visual Studio SDK and provide the highest level of extensibility. They can create designers and other tools, as well as integrate other programming languages. The Visual Studio SDK provides unmanaged APIs as well as a managed API to accomplish these tasks. However, the managed API isn't as comprehensive as the unmanaged one. Extensions are supported in the Standard (and higher) versions of Visual Studio 2005. Express Editions do not support hosting extensions.

Visual Studio 2008 introduced the Visual Studio Shell that allows for development of a customized version of the IDE. The Visual Studio Shell defines a set of VSPackages that provide the functionality required in any IDE. On top of that, other packages can be added to customize the installation. The Isolated mode of the shell creates a new AppId where the packages are installed. These are to be started with a different executable. It is aimed for development of custom development environments, either for a specific language or a specific scenario. The Integrated mode installs the packages into the AppId of the Professional/Standard/Team System editions, so that the tools integrate into these editions. The Visual Studio Shell is available as a free download.

After the release of Visual Studio 2008, Microsoft created the Visual Studio Gallery. It serves as the central location for posting information about extensions to Visual Studio. Community developers as well as commercial developers can upload information about their extensions to Visual Studio .NET 2002 through Visual Studio 2010. Users of the site can rate and review the extensions to help assess the quality of extensions being posted. An extension is stored in a VSIX file. Internally a VSIX file is a ZIP file that contains some XML files, and possibly one or more DLL's. One of the main advantages of these extensions is that they do not require Administrator rights to be installed. RSS feeds to notify users on updates to the site and tagging features are also planned.

Microsoft Visual Studio is available in the following editions or SKUs :

The Community edition was announced on November 12, 2014, as a new free version, with similar functionality to Visual Studio Professional. Prior to this date, the only free editions of Visual Studio were the feature-limited Express variants. Unlike the Express variants , Visual Studio Community supports multiple languages, and provides support for extensions. Individual developers have no restrictions on their use of the Community edition. The following uses also allow unlimited usage: contributing to Open Source projects, academic research, in a classroom learning environment and for developing and testing device drivers for the Windows operating system. All other use by an organization depends on its classification as an Enterprise (more than 250 employees or more than 1 million USD in annual revenue, per Microsoft). Non-Enterprises may use up to 5 copies without restriction, user number 6 and higher require a commercial license; Enterprise organizations require a commercial license for use outside of the noted exceptions. Visual Studio Community is oriented towards individual developers and small teams.

As of Visual Studio 2010, the Professional edition is the entry level commercial edition of Visual Studio. (Previously, a more feature restricted Standard edition was available.) It provides an IDE for all supported development languages. MSDN support is available as MSDN Essentials or the full MSDN library depending on licensing. It supports XML and XSLT editing, and can create deployment packages that only use ClickOnce and MSI . It includes tools like Server Explorer and integration with Microsoft SQL Server also. Windows Mobile development support was included in Visual Studio 2005 Standard, however, with Visual Studio 2008, it is only available in Professional and higher editions. Windows Phone 7 development support was added to all editions in Visual Studio 2010. Development for Windows Mobile is no longer supported in Visual Studio 2010. It is superseded by Windows Phone 7 .

In addition to the features provided by the Professional edition, the Enterprise edition provides a new set of software development, database development, collaboration, metrics, architecture, testing and reporting tools.

The first version of Visual Studio was Visual Studio 97. Before that, Visual Basic, Visual C++, Visual FoxPro and Visual SourceSafe were sold as separate products.

Microsoft first released Visual Studio (codenamed Boston , for the city of the same name , thus beginning the VS codenames related to places) in 1997, bundling many of its programming tools together for the first time. Visual Studio 97 came in two editions: Visual Studio Professional and Visual Studio Enterprise, the professional edition has three CDs, and the enterprise four CDs. It included Visual J++ 1.1 for Java programming and introduced Visual InterDev for creating dynamically generated web sites using Active Server Pages. There was a single companion CD that contained the Microsoft Developer Network library . Visual Studio 97 is only compatible with Windows 95 and Windows NT 4.0 . It is the last version to support Windows NT 4.0 before SP3.

Visual Studio 97 was an attempt at using the same development environment for multiple languages. Visual J++, InterDev, and the MSDN Library had all been using the same 'environment', called Developer Studio.

Visual Studio was also sold as a bundle with the separate IDEs used for Visual C++, Visual Basic and Visual FoxPro.

The next version, version 6.0 (codenamed Aspen , after the ski resort in Colorado), was released in June 1998 and is the last version to support the Windows 9x platform, as well as Windows NT 4.0 before SP6, but after SP2. Each version of each language in part also settled to v6.0, including Visual J++ which was prior v1.1, and Visual InterDev at the first release. The v6 edition of Microsoft was the core environment for the next four releases to provide programmers with an integrated look-alike platform. This led Microsoft to transition the development on the platform independent .NET Framework .

Visual Studio 6.0 was the last version to include Visual J++, which Microsoft removed as part of a settlement with Sun Microsystems that required Microsoft Internet Explorer not to provide support for the Java Virtual Machine .

Visual Studio 6.0 came in two editions: Professional and Enterprise. The Enterprise edition contained extra features not found in Professional edition, including:

Visual Studio was also sold as a bundle with the separate IDEs used for Visual C++, Visual Basic and Visual FoxPro.

Microsoft released Visual Studio .NET (VS.NET), codenamed Rainier (for Washington's Mount Rainier ), in February 2002 (the beta version was released via Microsoft Developer Network in 2001). The biggest change was the introduction of a managed code development environment using the .NET Framework. Programs developed using .NET are not compiled to machine language (like C++ is, for example) but instead to a format called Microsoft Intermediate Language (MSIL) or Common Intermediate Language (CIL). When a CIL application executes, it is compiled while being executed into the appropriate machine language for the platform it is being executed on, thereby making code portable across several platforms. Programs compiled into CIL can be executed only on platforms which have an implementation of Common Language Infrastructure . It is possible to run CIL programs in Linux or Mac OS X using non-Microsoft .NET implementations like Mono and DotGNU .

This was the first version of Visual Studio to require an NT -based Windows platform. The installer enforces this requirement, and is the last version to support Windows NT 4.0 SP6 or later and Windows 2000 before SP3.

Visual Studio .NET 2002 shipped in four editions: Academic, Professional, Enterprise Developer, and Enterprise Architect. Microsoft introduced C# (C-sharp), a new programming language, that targets .NET. It also introduced the successor to Visual J++ called Visual J#. Visual J# programs use Java's language-syntax. However, unlike Visual J++ programs, Visual J# programs can only target the .NET Framework, not the Java Virtual Machine that all other Java tools target.

Visual Basic changed drastically to fit the new framework, and the new version was called Visual Basic .NET. Microsoft also added extensions to C++, called Managed Extensions for C++ , so .NET programs could be created in C++.

Visual Studio .NET can produce applications targeting Windows (using the Windows Forms part of the .NET Framework), the Web (using ASP.NET and Web Services ) and, with an add-in, portable devices (using the .NET Compact Framework).

The internal version number of Visual Studio .NET 2002 is version 7.0. Microsoft released Service Pack 1 for Visual Studio .NET 2002 in March 2005.

In April 2003, Microsoft introduced a minor upgrade to Visual Studio .NET called Visual Studio .NET 2003, codenamed Everett (for the city of the same name ). It includes an upgrade to the .NET Framework, version 1.1, and is the first release to support developing programs for mobile devices, using ASP.NET or the .NET Compact Framework. The Visual C++ compiler's standards-compliance improved, especially in the area of partial template specialization . Visual C++ Toolkit 2003 is a version of the same C++ compiler shipped with Visual Studio .NET 2003 without the IDE that Microsoft made freely available. As of 2010 it is no longer available and the Express Editions have superseded it. Visual Studio .NET 2003 also supports Managed C++, which is the predecessor of C++/CLI. The internal version number of Visual Studio .NET 2003 is version 7.1 while the file format version is 8.0. Visual Studio .NET 2003 drops support for Windows NT 4.0, and is the last version to support Windows 2000 SP3 and Windows XP before SP2 and the only version to support Windows Server 2003 before SP1.

Visual Studio .NET 2003 shipped in five editions: Academic, Standard, Professional, Enterprise Developer, and Enterprise Architect. The Visual Studio .NET 2003 Enterprise Architect edition includes an implementation of Microsoft Visio 2002's modeling technologies, including tools for creating Unified Modeling Language -based visual representations of an application's architecture, and an object-role modeling (ORM) and logical database-modeling solution. "Enterprise Templates" were also introduced, to help larger development teams standardize coding styles and enforce policies around component usage and property settings.

Service Pack 1 was released September 13, 2006.

Visual Studio 2005, codenamed Whidbey (a reference to Whidbey Island in Puget Sound region ), was released online in October 2005 and to retail stores a few weeks later. Microsoft removed the ".NET" moniker from Visual Studio 2005 (as well as every other product with .NET in its name), but it still primarily targets the .NET Framework, which was upgraded to version 2.0. It requires Windows 2000 with Service Pack 4, Windows XP with at least Service Pack 2 or Windows Server 2003 with at least Service Pack 1. It is the last version to run on Windows 2000 and also the last version able to target Windows 98 and Windows Me for C++ applications.

Visual Studio 2005's internal version number is 8.0 while the file format version is 9.0. Microsoft released Service Pack 1 for Visual Studio 2005 on December 14, 2006. An additional update for Service Pack 1 that offers Windows Vista compatibility was made available on June 3, 2007.

Visual Studio 2005 was upgraded to support all the new features introduced in .NET Framework 2.0, including generics and ASP.NET 2.0. The IntelliSense feature in Visual Studio was upgraded for generics and new project types were added to support ASP.NET web services. Visual Studio 2005 additionally introduces support for a new task-based build platform called Microsoft Build Engine ( MSBuild ) which employs a new XML-based project file format. Visual Studio 2005 also includes a local web server, separate from IIS , that can host ASP.NET applications during development and testing. It also supports all SQL Server 2005 databases. Database designers were upgraded to support the ADO.NET 2.0 , which is included with .NET Framework 2.0. C++ also got a similar upgrade with the addition of C++/CLI which is slated to replace the use of Managed C++ . Other new features of Visual Studio 2005 include the "Deployment Designer" which allows application designs to be validated before deployments, an improved environment for web publishing when combined with ASP.NET 2.0 and load testing to see application performance under various sorts of user loads. Starting with the 2005 edition, Visual Studio also added extensive 64-bit support. While the host development environment itself is only available as a 32-bit application, Visual C++ 2005 supports compiling for x86-64 (AMD64 and Intel 64) as well as IA-64 ( Itanium ). The Platform SDK included 64-bit compilers and 64-bit versions of the libraries.

Microsoft also announced Visual Studio Tools for Applications as the successor to Visual Basic for Applications (VBA) and VSA (Visual Studio for Applications). VSTA 1.0 was released to manufacturing along with Office 2007 . It is included with Office 2007 and is also part of the Visual Studio 2005 SDK. VSTA consists of a customized IDE, based on the Visual Studio 2005 IDE, and a runtime that can be embedded in applications to expose its features via the .NET object model. Office 2007 applications continue to integrate with VBA, except for InfoPath 2007 which integrates with VSTA. Version 2.0 of VSTA (based on Visual Studio 2008) was released in April 2008. It is significantly different from the first version, including features such as dynamic programming and support for WPF , WCF , WF , LINQ , and .NET 3.5 Framework.

Visual Studio 2008, and Visual Studio Team System 2008 codenamed Orcas (a reference to Orcas Island , also an island in Puget Sound region , like Whidbey for the previous 2005 release), were released to MSDN subscribers on November 19, 2007, alongside .NET Framework 3.5. The source code for the Visual Studio 2008 IDE is available under a shared source license to some of Microsoft 's partners and ISVs . Microsoft released Service Pack 1 for Visual Studio 2008 on August 11, 2008. The internal version number of Visual Studio 2008 is version 9.0 while the file format version is 10.0. Visual Studio 2008 requires Windows XP Service Pack 2 plus Windows Installer 3.1, Windows Server 2003 Service Pack 1 or later. It is the last version available for Windows XP SP2 , Windows Server 2003 SP1 , as well as the only version to support Windows Vista before SP2 and Windows Server 2008 before SP2 and the last version to support targeting Windows 2000 for C++ applications.

Visual Studio 2008 is focused on development of Windows Vista , 2007 Office system, and Web applications. For visual design, a new Windows Presentation Foundation visual designer and a new HTML / CSS editor influenced by Microsoft Expression Web are included. J# is not included. Visual Studio 2008 requires .NET 3.5 Framework and by default configures compiled assemblies to run on .NET Framework 3.5, but it also supports multi-targeting which lets the developers choose which version of the .NET Framework (out of 2.0, 3.0, 3.5, Silverlight CoreCLR or .NET Compact Framework) the assembly runs on. Visual Studio 2008 also includes new code analysis tools, including the new Code Metrics tool (only in Team Edition and Team Suite Edition). For Visual C++ , Visual Studio adds a new version of Microsoft Foundation Classes (MFC 9.0) that adds support for the visual styles and UI controls introduced with Windows Vista . For native and managed code interoperability, Visual C++ introduces the STL/CLR, which is a port of the C++ Standard Template Library (STL) containers and algorithms to managed code . STL/CLR defines STL-like containers, iterators and algorithms that work on C++/CLI managed objects.

Visual Studio 2008 features include an XAML -based designer (codenamed Cider ), workflow designer , LINQ to SQL designer (for defining the type mappings and object encapsulation for SQL Server data), XSLT debugger, JavaScript Intellisense support, JavaScript Debugging support, support for UAC manifests , a concurrent build system, among others. It ships with an enhanced set of UI widgets, both for Windows Forms and WPF . It also includes a multithreaded build engine ( MSBuild ) to compile multiple source files (and build the executable file) in a project across multiple threads simultaneously. It also includes support for compiling icon resources in PNG format, introduced in Windows Vista. An updated XML Schema designer was released separately some time after the release of Visual Studio 2008.

Visual Studio Debugger includes features targeting easier debugging of multi-threaded applications. In debugging mode, in the Threads window, which lists all the threads, hovering over a thread displays the stack trace of that thread in tooltips. The threads can directly be named and flagged for easier identification from that window itself. In addition, in the code window, along with indicating the location of the currently executing instruction in the current thread, the currently executing instructions in other threads are also pointed out. The Visual Studio debugger supports integrated debugging of the .NET 3.5 Framework Base Class Library (BCL) which can dynamically download the BCL source code and debug symbols and allow stepping into the BCL source during debugging. As of 2010 a limited subset of the BCL source is available, with more library support planned for later.

On April 12, 2010, Microsoft released Visual Studio 2010, codenamed Dev10 , and .NET Framework 4 . It is available for Windows Server 2003 SP2, Windows XP SP3, Windows Vista SP2 and Windows Server 2008 SP2 and has support for Windows Server 2008 R2 , as well as for Windows 7 . It is the last version to support Windows XP SP3 , Windows Server 2003 SP2 , Windows Server 2003 R2 , Windows Vista SP2 and Windows Server 2008 SP2 , and the only version to support Windows 7 before SP1 and Windows Server 2008 R2 before SP1.

The Visual Studio 2010 IDE was redesigned which, according to Microsoft , clears the UI organization and "reduces clutter and complexity." The new IDE better supports multiple document windows and floating tool windows, while offering better multi-monitor support. The IDE shell has been rewritten using the Windows Presentation Foundation (WPF), whereas the internals have been redesigned using Managed Extensibility Framework (MEF) that offers more extensibility points than previous versions of the IDE that enabled add-ins to modify the behavior of the IDE.

The new multi-paradigm ML -variant F# forms part of Visual Studio 2010.

Visual Studio 2010 comes with .NET Framework 4 and supports developing applications targeting Windows 7 . It supports IBM Db2 and Oracle databases, in addition to Microsoft SQL Server . It has integrated support for developing Microsoft Silverlight applications, including an interactive designer. Visual Studio 2010 offers several tools to make parallel programming simpler: in addition to the Parallel Extensions for the .NET Framework and the Parallel Patterns Library for native code , Visual Studio 2010 includes tools for debugging parallel applications. The new tools allow the visualization of parallel Tasks and their runtime stacks . Tools for profiling parallel applications can be used for visualization of thread wait-times and thread migrations across processor cores. Intel and Microsoft have jointly pledged support for a new Concurrency Runtime in Visual Studio 2010 and Intel has launched parallelism support in Parallel Studio as an add-on for Visual Studio.

The Visual Studio 2010 code editor now highlights references; whenever a symbol is selected, all other usages of the symbol are highlighted. It also offers a Quick Search feature to incrementally search across all symbols in C++, C# and VB.NET projects. Quick Search supports substring matches and camelCase searches. The Call Hierarchy feature allows the developer to see all the methods that are called from a current method as well as the methods that call the current one. IntelliSense in Visual Studio supports a consume-first mode which developers can opt into. In this mode, IntelliSense does not auto-complete identifiers; this allows the developer to use undefined identifiers (like variable or method names) and define those later. Visual Studio 2010 can also help in this by automatically defining them, if it can infer their types from usage. Current versions of Visual Studio have a known bug which makes IntelliSense unusable for projects using pure C (not C++).

Visual Studio 2010 features a new Help System replacing the MSDN Library viewer. The Help System is no longer based on Microsoft Help 2 and does not use Microsoft Document Explorer. Dynamic help containing links to help items based on what the developer was doing at the time was removed in the final release, but can be added back using a download from Microsoft.

Visual Studio 2010 no longer supports development for Windows Mobile prior to Windows Phone 7 . Visual Studio 2010 Service Pack 1 was released in March 2011.

Visual Studio Ultimate 2010 replaces Visual Studio 2008 Team Suite. It includes new modeling tools, such as the Architecture Explorer , which graphically displays projects and classes and the relationships between them. It supports UML activity diagram, component diagram, (logical) class diagram, sequence diagram, and use case diagram. Visual Studio Ultimate 2010 also includes Test Impact Analysis which provides hints on which test cases are impacted by modifications to the source code, without actually running the test cases. This speeds up testing by avoiding running unnecessary test cases.

Visual Studio Ultimate 2010 also includes a historical debugger for managed code called IntelliTrace . Unlike a traditional debugger that records only the currently active stack, IntelliTrace records all events, such as prior function calls, method parameters, events and exceptions. This allows the code execution to be rewound in case a breakpoint was not set where the error occurred. Debugging with IntelliTrace causes the application to run more slowly than debugging without it, and uses more memory as additional data needs to be recorded. Microsoft allows configuration of how much data should be recorded, in effect, allowing developers to balance the speed of execution and resource usage. The Lab Management component of Visual Studio Ultimate 2010 uses virtualization to create a similar execution environment for testers and developers. The virtual machines are tagged with checkpoints which can later be investigated for issues, as well as to reproduce the issue. Visual Studio Ultimate 2010 also includes the capability to record test runs that capture the specific state of the operating environment as well as the precise steps used to run the test. These steps can then be played back to reproduce issues.

The final build of Visual Studio 2012 was announced on August 1, 2012, and the official launch event was held on September 12, 2012.

Unlike prior versions, Visual Studio 2012 cannot record and play macros and the macro editor has been removed. Also unlike prior versions, Visual Studio 2012 require Windows 7 SP1 and Windows Server 2008 R2 SP1.

New features include support for WinRT and C++/CX (Component Extensions) and C++ AMP ( GPGPU programming) Semantic Colorization.

Cross-compiling to ARM32 is supported from an x86 command prompt.

On September 16, 2011, a complete 'Developer Preview' of Visual Studio 11 was published on Microsoft's website. Visual Studio 11 Developer Preview requires Windows 7, Windows Server 2008 R2, Windows 8, or later operating systems. Versions of Microsoft Foundation Class Library (MFC) and C runtime (CRT) included with this release cannot produce software that is compatible with Windows XP or Windows Server 2003 except by using native multi-targeting and foregoing the newest libraries, compilers, and headers. However, on June 15, 2012, a blog post on the VC++ Team blog announced that based on customer feedback, Microsoft would re-introduce native support for Windows XP targets (though not for XP as a development platform) in a version of Visual C++ to be released later in the fall of 2012. "Visual Studio 2012 Update 1" (Visual Studio 2012.1) was released in November 2012. This update added support for Windows XP targets and also added other new tools and features (e.g. improved diagnostics and testing support for Windows Store apps).

On August 24, 2011, a blog post by Sumit Kumar, a Program Manager on the Visual C++ team, listed some of the features of the upcoming version of the Visual Studio C++ IDE:

The source code of Visual Studio 2012 consists of approximately 50 million lines of code.

During Visual Studio 11 beta, Microsoft eliminated the use of color within tools except in cases where color is used for notification or status change purposes. However, the use of color was returned after feedback demanding more contrast, differentiation, clarity and "energy" in the user interface.

In the Visual Studio 2012 release candidate (RC), a major change to the interface is the use of all-caps menu bar, as part of the campaign to keep Visual Studio consistent with the direction of other Microsoft user interfaces, and to provide added structure to the top menu bar area. The redesign was criticized for being hard to read, and going against the trends started by developers to use CamelCase to make words stand out better. Some speculated that the root cause of the redesign was to incorporate the simplistic look and feel of Metro programs. However, there exists a Windows Registry option to allow users to disable the all-caps interface.

The preview for Visual Studio 2013 was announced at the Build 2013 conference and made available on June 26, 2013. The Visual Studio 2013 RC (Release Candidate) was made available to developers on MSDN on September 9, 2013.

The final release of Visual Studio 2013 became available for download on October 17, 2013, along with .NET 4.5.1. Visual Studio 2013 officially launched on November 13, 2013, at a virtual launch event keynoted by S. Somasegar and hosted on events .visualstudio .com . "Visual Studio 2013 Update 1" (Visual Studio 2013.1) was released on January 20, 2014. Visual Studio 2013.1 is a targeted update that addresses some key areas of customer feedback. "Visual Studio 2013 Update 2" (Visual Studio 2013.2) was released on May 12, 2014. Visual Studio 2013 Update 3 was released on August 4, 2014. With this update, Visual Studio provides an option to disable the all-caps menus, which was introduced in VS2012. "Visual Studio 2013 Update 4" (Visual Studio 2013.4) was released on November 12, 2014. "Visual Studio 2013 Update 5" (Visual Studio 2013.5) was released on July 20, 2015.

Visual Studio 2013 also adds support for Windows 8.1 and Windows Server 2012 R2 .

Initially referred to as Visual Studio "14", the first Community Technology Preview (CTP) was released on June 3, 2014 and the Release Candidate was released on April 29, 2015; Visual Studio 2015 was officially announced as the final name on November 12, 2014.

Visual Studio 2015 RTM was released on July 20, 2015. Visual Studio 2015 Update 1 was released on November 30, 2015. Visual Studio 2015 Update 2 was released on March 30, 2016. Visual Studio 2015 Update 3 was released on June 27, 2016. Visual Studio 2015 is the first version to support Windows 10 and the last version to support Windows 8 , Windows Server 2008 R2 SP1 and Windows Server 2012 ; it's also the last version to support targeting Windows XP SP3 , Windows Server 2003 SP2 , Windows Vista SP2 and Windows Server 2008 SP2 for C++ applications.

Initially referred to as Visual Studio "15", it was released on March 7, 2017. The first Preview was released on March 30, 2016. Visual Studio "15" Preview 2 was released May 10, 2016. Visual Studio "15" Preview 3 was released on July 7, 2016. Visual Studio "15" Preview 4 was released on August 22, 2016. Visual Studio "15" Preview 5 was released on October 5, 2016.

On November 14, 2016, for a brief period of time, Microsoft released a blog post revealing Visual Studio 2017 product name version alongside upcoming features.

On November 16, 2016, "Visual Studio 2017" was announced as the final name, and Visual Studio 2017 RC was released.

On March 7, 2017, Visual Studio 2017 was released for general availability. It requires Windows 7 SP1 , Windows 8.1 with KB2919355 or Windows Server 2012 R2 with KB2919355 at the minimum, and also added support for Windows Server 2016 .

On March 14, 2017, first fix was released for Visual Studio 2017 due to failures during installation or opening solutions in the first release.

On April 5, 2017, Visual Studio 2017 15.1 was released and added support for targeting the .NET Framework 4.7.

On May 10, 2017, Visual Studio 2017 15.2 was released and added a new workload, "Data Science and Analytical Applications Workload". An update to fix the dark color theme was released on May 12, 2017.

On August 14, 2017, Visual Studio 2017 15.3 was released and added support for targeting .NET Core 2.0. An update (15.3.1) was released four days later to address a Git vulnerability with submodules ( CVE 2017-1000117 ).

On October 10, 2017, Visual Studio 15.4 was released.

On December 4, 2017, Visual Studio 15.5 was released. This update contained major performance improvements, new features, as well as bug fixes.

On March 6, 2018, Visual Studio 15.6 was released. It includes updates to unit testing and performance.

On May 7, 2018, Visual Studio 15.7 was released. It included updates across the board including, the installer, editor, debugger among others. Almost all point releases, the latest of which is 15.7.6 released August 2, 2018, include security updates. With the release of Visual Studio 2017 15.7, Visual C++ now conforms to the C++17 standard.

On September 20, 2018, Visual Studio 15.8.5 was released. Tools for Xamarin now supports Xcode 10.

On November 15, 2018, Visual Studio 2017 15.9 was released and support for targeting ARM64 for Windows 10 was provided. Previously only ARM32 was supported as a target.

Visual Studio 2017 offers new features like support for EditorConfig (a coding style enforcement framework), NGen support, .NET Core and Docker toolset (Preview), and Xamarin 4.3 (Preview). It also has a XAML Editor, improved IntelliSense, live unit testing, debugging enhancement and better IDE experience and productivity. Additionally, it is the last version of Visual Studio to support maintaining Windows 10 Mobile projects.

On June 6, 2018, Microsoft announced Visual Studio 2019 (version 16).

On December 4, 2018, Visual Studio 2019 Preview 1 was released.

On January 24, 2019, Visual Studio 2019 Preview 2 was released.

On February 13, 2019, Visual Studio 2019 Preview 3 was released.

On February 27, 2019, Visual Studio 2019 RC was released while setting April 2, 2019 for its general availability.

It is generally available (GA) since April 2, 2019 and available for download.

On September 23, 2019, Visual Studio 2019 16.3 was released and added support for targeting the .NET Framework 4.8.

Visual Studio 2019 is the first version of Visual Studio to support Windows 11 , and also requires Windows 7 SP1 , Windows 8.1 with KB2919355, Windows Server 2012 R2 with KB2919355 or Windows 10, version 1703 at the minimum. It is the last 32-bit version of Visual Studio as later versions are only 64-bit. It is also the last version to support Windows 7 SP1, Windows 8.1 and Windows Server 2012 R2, with later versions requiring at least Windows 10 and Windows Server 2016.

On April 19, 2021, Microsoft announced Visual Studio 2022 (version 17). It is the first version to run as a 64-bit process allowing Visual Studio main process to access more than 4 GB of memory, preventing out-of-memory exceptions which could occur with large projects.

On June 17, 2021, Visual Studio 2022 Preview 1 was released.

On July 14, 2021, Visual Studio 2022 Preview 2 was released.

On August 10, 2021, Visual Studio 2022 Preview 3 was released.

On September 14, 2021, Visual Studio 2022 Preview 4 was released.

On October 12, 2021, Visual Studio 2022 RC and Preview 5 was released while setting November 8, 2021 for its general availability.

It is generally available (GA) since November 8, 2021 and available for download.

It is available only for Windows 10 and Windows Server 2016 or later, and also supports Windows Server 2022 .

On August 9, 2022, Visual Studio 17.3 was released and added support for targeting the .NET Framework 4.8.1.

On November 8, 2022, Visual Studio 17.4 was released and provided an ARM64 native version of the compiler itself, not just the ability to target ARM from x86/x64 (real or emulated on ARM64).

On November 13, 2013, Microsoft announced the release of a software as a service offering of Visual Studio on Microsoft Azure platform; at the time, Microsoft called it Visual Studio Online. Previously announced as Team Foundation Services, it expanded over the on-premises Team Foundation Server (TFS; now known as Azure DevOps Server ) by making it available on the Internet and implementing a rolling release model. Customers could use Azure portal to subscribe to Visual Studio Online. Subscribers receive a hosted Git -compatible version control system, a load-testing service, a telemetry service and an in-browser code editor codenamed "Monaco". During the Connect(); 2015 developer event on November 18, 2015, Microsoft announced that the service was rebranded as "Visual Studio Team Services (VSTS)". On September 10, 2018, Microsoft announced another rebranding of the service, this time to "Azure DevOps Services".

Microsoft offers Stakeholder, Basic, and Visual Studio subscriber access levels for Azure DevOps Services. The Basic plan is free of charge for up to five users. Users with a Visual Studio subscription can be added to a plan with no additional charge.

Visual Studio Application Lifecycle Management (ALM) is a collection of integrated software development tools developed by Microsoft. These tools currently consist of the IDE (Visual Studio 2015 Community and greater editions), server (Team Foundation Server), and cloud services (Visual Studio Team Services). Visual Studio ALM supports team-based development and collaboration, Agile project management, DevOps , source control, packaging, continuous development, automated testing, release management, continuous delivery, and reporting tools for apps and services.

In Visual Studio 2005 and Visual Studio 2008, the brand was known as Microsoft Visual Studio Team System (VSTS). In October 2009, the Team System brand was renamed Visual Studio ALM with the Visual Studio 2010 (codenamed 'Rosario') release.

Visual Studio Team Services debuted as Visual Studio Online in 2013 and was renamed in 2015.

Visual Studio Lab Management is a software development tool developed by Microsoft for software testers to create and manage virtual environments. Lab Management extends the existing Visual Studio Application Lifecycle Management platform to enable an integrated Hyper-V based test lab. Since Visual Studio 2012, it is already shipped as a part of it; and, can be set up after Azure DevOps and SCVMM are integrated.

Microsoft Visual Studio LightSwitch is an extension and framework specifically tailored for creating line-of-business applications built on existing .NET technologies and Microsoft platforms. The applications produced are architecturally 3-tier : the user interface runs on either Microsoft Silverlight or HTML 5 client , or as a SharePoint 2013 app; the logic and data-access tier is built on WCF Data Services and exposed as an OData feed hosted in ASP.NET; and the primary data storage supports Microsoft SQL Server Express , Microsoft SQL Server and Microsoft SQL Azure . LightSwitch also supports other data sources including Microsoft SharePoint , OData and WCF RIA Services.

LightSwitch includes graphical designers for designing entities and entity relationships, entity queries, and UI screens. Business logic may be written in either Visual Basic or Visual C# . LightSwitch is included with Visual Studio 2012 Professional and higher. Visual Studio 2015 is the last release of Visual Studio that includes the LightSwitch tooling.

The user interface layer is now an optional component when deploying a LightSwitch solution, allowing a service-only deployment.

The first version of Visual Studio LightSwitch, released July 26, 2011, had many differences from the current release of LightSwitch. Notably the tool was purchased and installed as a stand-alone product. If Visual Studio 2010 Professional or higher was already installed on the machine, LightSwitch would integrate into that. The second major difference was the middle tier was built and exposed using WCF RIA Services.

As of October 14, 2016, Microsoft no longer recommends LightSwitch for new application development.

Visual Studio Code is a freeware source code editor , along with other features, for Linux, Mac OS, and Windows. It also includes support for debugging and embedded Git Control . It is built on open-source , and on April 14, 2016, version 1.0 was released.

Visual Studio Team System Profiler (VSTS Profiler) is a tool to analyze the performance of .NET projects that analyzes the space and time complexity of the program. It analyzes the code and prepares a report that includes CPU sampling, instrumentation, .NET memory allocation and resource contention .